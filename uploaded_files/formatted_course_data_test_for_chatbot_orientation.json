[{"title":"CIS\u00a01050  Computational Data Exploration","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"The primary goal of this course is to introduce computational methods of interacting with data. In this course, students will be introduced to the IPython programming environment. They will learn how to gather data, store it in appropriate data structures and then either write their own functions or use libraries to analyze and then display the salient information in that data. Data will be drawn from a variety of domains, including but not limited to travel, entertainment, politics, economics, biology etc.","assessment_method":"Midterms","class_structure":{"Lab":{"day":"Wednesday","time":"16:00-17:30","mandatory":false,"duration":2},"Lecture":{"day":"Thursday","time":"12:00-13:30","mandatory":false,"duration":1}},"Course Quality":1.75,"Instructor Rating":1.8,"Course Difficulty":1.78,"Work Required":1.55,"Category":"Math and Natural Science"},{"title":"CIS\u00a01070  Visual Culture through the Computer's Eye","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"Visual studies and the humanities more generally have thought about and modeled seeing of artworks for many centuries. What useful tools can machine learning develop from databases of art historical images or other datasets of visual culture? Can tools from machine learning help visual studies ask new questions? When put together, what can these fields teach us about visual learning, its pathways, its underlying assumptions, and the effects of its archives\/datasets? Class project teams will ideally be composed of both humanities majors and engineering majors who will develop datasets and\/or ask important questions of datasets, in addition to thinking and writing more generally about how computer vision could help in teaching and analyzing visual art. We are looking for a variety of students from different majors and schools to bring their diverse skill sets to the course. No programming knowledge is required. The course offers an example-based introduction to machine learning, so no prior knowledge of machine learning is required.","assessment_method":"Midterms, Weekly tests, Weekly homework","class_structure":{"Lab":{"day":"Thursday","time":"10:00-11:30","mandatory":false,"duration":2}},"Course Quality":1.48,"Instructor Rating":1.81,"Course Difficulty":1.86,"Work Required":1.53,"Category":"Engineering"},{"title":"CIS\u00a01100  Introduction to Computer Programming","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"Introduction to Computer Programming is the first course in our series introducing students to computer science. In this class you will learn the fundamentals of computer programming in Java, with emphasis on applications in science and engineering. You will also learn about the broader field of computer science and algorithmic thinking, the fundamental approach that computer scientists take to solving problems.","assessment_method":"Project plus midterms","class_structure":{"Recitation":{"day":"Wednesday","time":"14:00-15:30","mandatory":false,"duration":1},"Lecture":{"day":"Thursday","time":"14:00-15:30","mandatory":true,"duration":1},"Lab":{"day":"Wednesday","time":"16:00-17:30","mandatory":true,"duration":2}},"Course Quality":1.82,"Instructor Rating":1.46,"Course Difficulty":2.01,"Work Required":1.48,"Category":"Math and Natural Science"},{"title":"CIS\u00a01200  Programming Languages and Techniques I","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"A fast-paced introduction to the fundamental concepts of programming and software design. This course assumes some previous programming experience, at the level of a high school computer science class or CIS\u00a01100. (If you got at least 4 in the AP Computer Science A or AB exam, you will do great.) No specific programming language background is assumed: basic experience with any language (for instance Java, C, C++, VB, Python, Perl, or Scheme) is fine. If you have never programmed before, you should take CIS\u00a01100 first.","assessment_method":"Final exam","class_structure":{"Recitation":{"day":"Thursday","time":"10:00-11:30","mandatory":true,"duration":3},"Lab":{"day":"Tuesday","time":"14:00-15:30","mandatory":true,"duration":2}},"Course Quality":1.5,"Instructor Rating":1.8,"Course Difficulty":1.61,"Work Required":1.7,"Category":"Technical Electives"},{"title":"CIS\u00a01210  Programming Languages and Techniques II","semester":"Spring","prerequisites":"Prerequisite: CIS\u00a01200 AND CIS\u00a01600","course_unit":"1 Course Unit","info":"This is a course about Algorithms and Data Structures using the JAVA programming language. We introduce the basic concepts about complexity of an algorithm and methods on how to compute the running time of algorithms. Then, we describe data structures like stacks, queues, maps, trees, and graphs, and we construct efficient algorithms based on these representations. The course builds upon existing implementations of basic data structures in JAVA and extends them for the structures like trees, studying the performance of operations on such structures, and theiefficiency when used in real-world applications. A large project introducing students to the challenges of software engineering concludes the course.","assessment_method":"Project plus midterms, Weekly tests plus final exam","class_structure":{"Lecture":{"day":"Tuesday","time":"16:00-17:30","mandatory":false,"duration":3}},"Course Quality":1.91,"Instructor Rating":2.01,"Course Difficulty":1.38,"Work Required":1.75,"Category":"Engineering"},{"title":"CIS\u00a01250  Technology and Policy","semester":"No semester info","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"Have you ever wondered why sharing music and video generates such political and legal controversies? Is information on your PC safe and should law enforcement be able to access information you enter on the Web? Will new devices allow tracking of your every move and every purchase? CIS\u00a01250 is focused on developing an understanding of existing and emerging technologies, along with the political, societal and economic impacts of those technologies. The technologies are spread across a number of engineering areas and each of them raise issues that are of current concern or are likely to be a future issue.","assessment_method":"Weekly tests plus final exam, Weekly tests","class_structure":{"Lab":{"day":"Friday","time":"12:00-13:30","mandatory":false,"duration":2},"Recitation":{"day":"Thursday","time":"08:00-09:30","mandatory":false,"duration":1}},"Course Quality":1.83,"Instructor Rating":1.73,"Course Difficulty":1.69,"Work Required":1.78,"Category":"Technical Electives"},{"title":"CIS\u00a01400  Introduction to Cognitive Science","semester":"Fall","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"How do minds work? This course surveys a wide range of answers to this question from disciplines ranging from philosophy to neuroscience. The course devotes special attention to the use of simple computational and mathematical models. Topics include perception, learning, memory, decision making, emotion and consciousness. The course shows how the different views from the parent disciplines interact and identifies some common themes among the theories that have been proposed. The course pays particular attention to the distinctive role of computation in such theories and provides an introduction to some of the main directions of current research in the field. It is a requirement for the BA in Cognitive Science, the BAS in Computer and Cognitive Science, and the minor in Cognitive Science, and it is recommended for students taking the dual degree in Computer and Cognitive Science.","assessment_method":"Weekly homework, Final exam, Weekly tests plus final exam","class_structure":{"Lecture":{"day":"Monday","time":"10:00-11:30","mandatory":true,"duration":3},"Lab":{"day":"Tuesday","time":"16:00-17:30","mandatory":false,"duration":2},"Recitation":{"day":"Friday","time":"14:00-15:30","mandatory":false,"duration":3}},"Course Quality":1.66,"Instructor Rating":1.77,"Course Difficulty":1.75,"Work Required":1.72,"Category":"Engineering"},{"title":"CIS\u00a01600  Mathematical Foundations of Computer Science","semester":"Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"What are the basic mathematical concepts and techniques needed in computer science? This course provides an introduction to proof principles and logics, functions and relations, induction principles, combinatorics and graph theory, as well as a rigorous grounding in writing and reading mathematical proofs.","assessment_method":"Weekly tests, Weekly homework","class_structure":{"Recitation":{"day":"Friday","time":"16:00-17:30","mandatory":false,"duration":3},"Lab":{"day":"Wednesday","time":"16:00-17:30","mandatory":true,"duration":3},"Lecture":{"day":"Tuesday","time":"12:00-13:30","mandatory":true,"duration":1}},"Course Quality":1.72,"Instructor Rating":1.85,"Course Difficulty":1.71,"Work Required":1.78,"Category":"Math and Natural Science"},{"title":"CIS\u00a01810  The Quantum and the Computer","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"This Freshman Seminar is designed to be a very introductory exposition about Quantum Computation and Quantum Information Science. There are no formal physics, mathematics, or computer science prerequisites. It is meant primarily for freshmen in SAS and Wharton, who have an itch to learn about a beautiful subject that intrinsically unites quantum physics, computation, and information science. The structure of the course will be lecture-based using small-team based exercises for evaluation. The enrollment will be limited to 20 students. Freshmen standing.","assessment_method":"Midterms, Weekly tests plus final exam, Weekly homework","class_structure":{"Lab":{"day":"Wednesday","time":"08:00-09:30","mandatory":false,"duration":2}},"Course Quality":1.71,"Instructor Rating":1.64,"Course Difficulty":1.9,"Work Required":1.79,"Category":"Technical Electives"},{"title":"CIS\u00a01901  C++ Programming","semester":"Not Offered Every Year","prerequisites":"No prerequisites listed","course_unit":"0-0.5 Course Units","info":"This course will provide an introduction to programming in C++ and is intended for students who are already experienced with programming in C and in object-oriented languages such as Java. C++ provides programmers with a greater level of control over machine resources and is commonly used in situations where low level access or performance are important. This course will cover the features and abstractions that C++ provides to write code that is both safe and performant. This course recommends students to have completed CIS\u00a01200 and CIS\u00a02400.","assessment_method":"Weekly tests, Project based","class_structure":{"Recitation":{"day":"Tuesday","time":"16:00-17:30","mandatory":false,"duration":3},"Lab":{"day":"Tuesday","time":"16:00-17:30","mandatory":true,"duration":2}},"Course Quality":1.76,"Instructor Rating":1.73,"Course Difficulty":1.86,"Work Required":1.77,"Category":"Technical Electives"},{"title":"CIS\u00a01902  Python Programming","semester":"Not Offered Every Year","prerequisites":"Prerequisite: CIS\u00a01200","course_unit":"0-0.5 Course Units","info":"Python is an elegant, concise, and powerful language that is useful for tasks large and small. Python has quickly become a popular language for getting things done efficiently in many in all domains: scripting, systems programming, research tools, and web development. This course will provide an introduction to this modern high-level language using hands-on experience through programming assignments and a collaborative final application development project.","assessment_method":"Final exam, Weekly tests, Project based","class_structure":{"Recitation":{"day":"Tuesday","time":"12:00-13:30","mandatory":false,"duration":3}},"Course Quality":1.73,"Instructor Rating":1.6,"Course Difficulty":2.03,"Work Required":1.65,"Category":"Engineering"},{"title":"CIS\u00a01903  Go Programming","semester":"Not Offered Every Year","prerequisites":"Prerequisite: CIS\u00a01100","course_unit":"0-0.5 Course Units","info":"Go is an open source programming language created by Google designed for speed, efficiency and infrastructure. While Go is particularly proficient at concurrent systems programming, it has a variety of uses and has been gaining popularity in a variety of fields, including graphics, mobile applications and machine learning. Go is simple, fast and is continuing to rapidly grow in industry. In this course, we will cover what makes Go so unique and apply it to practical, real world situations. Topics covered will include concurrency and parallelism, goroutines and channels, web scraping, and other popular industry Go applications.","assessment_method":"Final exam","class_structure":{"Lab":{"day":"Monday","time":"08:00-09:30","mandatory":false,"duration":1},"Lecture":{"day":"Wednesday","time":"14:00-15:30","mandatory":true,"duration":2}},"Course Quality":1.76,"Instructor Rating":1.62,"Course Difficulty":1.76,"Work Required":1.66,"Category":"Engineering"},{"title":"CIS\u00a01904  Introduction to Haskell Programming","semester":"Not Offered Every Year","prerequisites":"Prerequisite: CIS\u00a01200","course_unit":"0-0.5 Course Units","info":"Haskell is a high-level, purely functional programming language with a strong static type system and elegant mathematical underpinnings. It is being increasingly used in industry by organizations such as Facebook, AT&T, and NASA, along with several financial firms. We will explore the joys of functional programming, using Haskell as a vehicle. The aim of the course will be to allow you to use Haskell to easily and conveniently write practical programs. Evaluation will be based on regular homework assignments and class participation.","assessment_method":"Weekly tests plus final exam, Final exam, Project plus midterms","class_structure":{"Lecture":{"day":"Tuesday","time":"08:00-09:30","mandatory":false,"duration":2},"Recitation":{"day":"Thursday","time":"12:00-13:30","mandatory":false,"duration":1},"Lab":{"day":"Thursday","time":"12:00-13:30","mandatory":false,"duration":2}},"Course Quality":1.72,"Instructor Rating":1.63,"Course Difficulty":1.78,"Work Required":1.67,"Category":"Math and Natural Science"},{"title":"CIS\u00a01911  Using and Understanding Unix and Linux","semester":"Not Offered Every Year","prerequisites":"Prerequisite: CIS\u00a01100","course_unit":"0-0.5 Course Units","info":"Unix, in its many forms, runs much of the world's computer infrastructure, from cable modems and cell phones to the giant clusters that power Google and Amazon. This half-credit course provides a thorough introduction to Unix and Linux. Topics will range from critical basic skills such as examining and editing files, compiling programs and writing shell scripts, to higher level topics such as the architecture of Unix and its programming model. The material learned is applicable to many classes, including CIS\u00a02400, CIS\u00a03310, CIS\u00a03410, CIS 3710, and CIS\u00a03800.","assessment_method":"Weekly tests plus final exam, Project plus midterms","class_structure":{"Lecture":{"day":"Wednesday","time":"08:00-09:30","mandatory":true,"duration":3},"Recitation":{"day":"Wednesday","time":"16:00-17:30","mandatory":true,"duration":3}},"Course Quality":1.63,"Instructor Rating":1.45,"Course Difficulty":1.88,"Work Required":1.8,"Category":"General Electives"},{"title":"CIS\u00a01912  DevOps","semester":"Not Offered Every Year","prerequisites":"No prerequisites listed","course_unit":"0-0.5 Course Units","info":"DevOps is the breaking down of the wall between Developers and Operations to allow more frequent and reliable feature deployments. Through a variety of automation-focused techniques, DevOps has the power to radically improve and streamline processes that in the past were manual and susceptible to human error.\nIn this course we will take a practical, hands-on look at DevOps and dive into some of the main tools of DevOps: automated testing, containerization, reproducibility, continuous integration, and continuous deployment. Throughout the semester we build toward an end-to-end pipeline that takes a webserver, packages it, and then deploys it to the cloud in a reliable and quickly-reproducible manner utilizing industry-leading technologies like Kubernetes and Docker. Evaluation is based on homework assignments and a final group project.","assessment_method":"Project plus midterms, Weekly tests, Project based","class_structure":{"Lecture":{"day":"Thursday","time":"16:00-17:30","mandatory":true,"duration":2},"Recitation":{"day":"Tuesday","time":"10:00-11:30","mandatory":false,"duration":3}},"Course Quality":1.85,"Instructor Rating":1.67,"Course Difficulty":1.49,"Work Required":1.65,"Category":"General Electives"},{"title":"CIS\u00a01921  Solving Hard Problems in Practice","semester":"Not Offered Every Year","prerequisites":"Prerequisite: CIS\u00a01210","course_unit":"0-0.5 Course Units","info":"What does Sudoku have in common with debugging, scheduling exams, and routing shipments? All of these problems are provably hard -- no one has a fast algorithm to solve them. But in reality, people are quickly solving these problems on a huge scale with clever systems and heuristics! In this course, we'll explore how researchers and organizations like Microsoft, Google, and NASA are solving these hard problems, and we'll get to use some of the tools they've built!","assessment_method":"Project plus midterms, Final exam","class_structure":{"Lecture":{"day":"Monday","time":"10:00-11:30","mandatory":true,"duration":2},"Recitation":{"day":"Tuesday","time":"12:00-13:30","mandatory":true,"duration":3},"Lab":{"day":"Tuesday","time":"10:00-11:30","mandatory":false,"duration":2}},"Course Quality":1.8,"Instructor Rating":1.58,"Course Difficulty":1.63,"Work Required":1.66,"Category":"General Electives"},{"title":"CIS\u00a01961  Ruby on Rails Web Development","semester":"Not Offered Every Year","prerequisites":"Prerequisite: CIS\u00a01200","course_unit":"0-0.5 Course Units","info":"This course will teach the fundamentals of developing web applications using Ruby on Rails, a rapid-development web framework developed by Basecamp, and adopted by companies like Airbnb, GitHub, Bloomberg, CrunchBase, and Shopify. The first part of the course will focus on Ruby, the language that powers Rails. Along the way, students will also pick up essential skills such as git, bash, HTML and CSS. The second part will focus on Rails, the web framework and will include all topics required to develop and deploy production-ready modern web applications with Rails. Throughout the course, students will be working on a web application project of their own choosing. Upon completion of the course, this application will be deployed and made accessible to the public.","assessment_method":"Midterms, Weekly tests plus final exam, Project based","class_structure":{"Lab":{"day":"Monday","time":"14:00-15:30","mandatory":true,"duration":1},"Recitation":{"day":"Thursday","time":"12:00-13:30","mandatory":false,"duration":1},"Lecture":{"day":"Tuesday","time":"10:00-11:30","mandatory":false,"duration":1}},"Course Quality":1.59,"Instructor Rating":1.7,"Course Difficulty":1.77,"Work Required":1.91,"Category":"Math and Natural Science"},{"title":"CIS\u00a01962  JavaScript Programming","semester":"Not Offered Every Year","prerequisites":"No prerequisites listed","course_unit":"0-0.5 Course Units","info":"This course provides an introduction to modern web development frameworks, techniques, and practices used to deliver robust client side applications on the web. The emphasis will be on developing JavaScript programs that run in the browser. Topics covered include the JavaScript language, web browser internals, the Document Object Model (DOM), HTML5, client-side app architecture and compile-to-JS languages like (Coffeescript, TypeScript, etc.). This course is most useful for students who have some programming and web development experience and want to develop moderate JavaScript skills to be able to build complex, interactive applications in the browser.","assessment_method":"Project based, Project plus midterms, Weekly tests plus final exam","class_structure":{"Lab":{"day":"Friday","time":"16:00-17:30","mandatory":true,"duration":3}},"Course Quality":1.79,"Instructor Rating":1.84,"Course Difficulty":1.75,"Work Required":1.85,"Category":"General Electives"},{"title":"CIS\u00a01990  Special Topics","semester":"No semester info","prerequisites":"No prerequisites listed","course_unit":"0-0.5 Course Units","info":"This course will be used for 'pilot versions' of new CIS courses of this type that the department is planning to offer. A given course will be offered as CIS\u00a01990 at most twice; after this, it will be assigned a permanent course number.","assessment_method":"Weekly homework","class_structure":{"Lecture":{"day":"Thursday","time":"16:00-17:30","mandatory":false,"duration":1},"Recitation":{"day":"Wednesday","time":"08:00-09:30","mandatory":true,"duration":2},"Lab":{"day":"Monday","time":"12:00-13:30","mandatory":true,"duration":3}},"Course Quality":1.48,"Instructor Rating":1.27,"Course Difficulty":1.66,"Work Required":1.74,"Category":"Technical Electives"},{"title":"CIS\u00a02330  Introduction to Blockchain","semester":"Spring","prerequisites":"Prerequisite: CIS\u00a01200","course_unit":"1 Course Unit","info":"Blockchain or Distributed Ledger Technology (DLT) provides a decentralized method of information sharing between parties that do not trust each other. Instead the trust is in the underlying cryptographic algorithms. This practical introductory course provides  experience with the fundamentals of cryptography (codes and ciphers, symmetric and asymmetric encryption, public and private keys, hashes, and zero knowledge proofs) - as it is applied to implementing a blockchain solution. This course covers the basics of a distributed ledger, how it is built, used, and secured. Methods of ensuring consensus - from proof-of-work to proof-of-stake will be explored and analyzed. Students will have both written and practical assignments to build and deploy components of a blockchain solution.","assessment_method":"Weekly tests plus final exam","class_structure":{"Recitation":{"day":"Friday","time":"16:00-17:30","mandatory":false,"duration":1}},"Course Quality":1.85,"Instructor Rating":1.68,"Course Difficulty":1.74,"Work Required":1.68,"Category":"Math and Natural Science"},{"title":"CIS\u00a02400  Introduction to Computer Systems","semester":"Fall or Spring","prerequisites":"Prerequisite: CIS\u00a01200","course_unit":"1 Course Unit","info":"You know how to program, but do you know how computers really work? How do millions of transistors come together to form a complete computing system? This bottom-up course begins with transistors and simple computer hardware structures, continues with low-level programming using primitive machine instructions, and finishes with an introduction to the C programming language. This course is a broad introduction to all aspects of computer systems architecture and serves as the foundation for subsequent computer systems courses, such as Computer Organization and Design (CIS\u00a04710), Computer Operating Systems (CIS\u00a03800), and Compilers and Interpreters (CIS\u00a03410).","assessment_method":"Final exam, Weekly tests","class_structure":{"Lab":{"day":"Thursday","time":"12:00-13:30","mandatory":false,"duration":1}},"Course Quality":1.84,"Instructor Rating":1.6,"Course Difficulty":1.57,"Work Required":1.74,"Category":"Math and Natural Science"},{"title":"CIS\u00a02610  Discrete Probability, Stochastic Processes, and Statistical Inference","semester":"Fall","prerequisites":"Prerequisite: CIS\u00a01600","course_unit":"1 Course Unit","info":"The purpose of this course is to provide a 1 CU educational experience which tightly integrates the theory and applications of discrete probability, discrete stochastic processes, and discrete statistical inference in the study of computer science. The intended audience for this class is both those students who are CS majors as well as those intending to be CS majors. Specifically, it will be assumed that the students will know: Set Theory, Mathematical Induction, Number Theory, Functions, Equivalence Relations, Partial-Order Relations, Combinatorics, and Graph Theory at the level currently covered in CIS\u00a01600. This course could be taken immediately following CIS\u00a01600. Computation and Programming will play an essential role in this course. The students will be expected to use the Maple programming environment in homework exercises which will include: numerical and symbolic computations, simulations, and graphical displays.","assessment_method":"Midterms, Project based, Final exam","class_structure":{"Lab":{"day":"Thursday","time":"10:00-11:30","mandatory":false,"duration":2},"Lecture":{"day":"Friday","time":"16:00-17:30","mandatory":false,"duration":3},"Recitation":{"day":"Monday","time":"10:00-11:30","mandatory":true,"duration":2}},"Course Quality":2.0,"Instructor Rating":1.6,"Course Difficulty":1.54,"Work Required":1.53,"Category":"Math and Natural Science"},{"title":"CIS\u00a02620  Automata, Computability, and Complexity","semester":"Fall","prerequisites":"Prerequisite: CIS\u00a01600","course_unit":"1 Course Unit","info":"This course explores questions fundamental to computer science such as which problems cannot be solved by computers, can we formalize computing as a mathematical concept without relying upon the specifics of programming languages and computing platforms, and which problems can be solved efficiently. The topics include finite automata and regular languages, context-free grammars and pushdown automata, Turing machines and undecidability, tractability and NP-completeness. The course emphasizes rigorous mathematical reasoning as well as connections to practical computing problems such as test processing, parsing, XML query languages, and program verification.","assessment_method":"Weekly homework, Project plus midterms","class_structure":{"Lecture":{"day":"Wednesday","time":"16:00-17:30","mandatory":false,"duration":1}},"Course Quality":1.58,"Instructor Rating":1.71,"Course Difficulty":1.74,"Work Required":1.91,"Category":"General Electives"},{"title":"CIS\u00a03200  Introduction to Algorithms","semester":"Spring","prerequisites":"Prerequisite: CIS\u00a01200 AND CIS\u00a01210 AND CIS\u00a01600 AND CIS\u00a02620","course_unit":"1 Course Unit","info":"How do you optimally encode a text file? How do you find shortest paths in a map? How do you design a communication network? How do you route data in a network? What are the limits of efficient computation? This course gives a comprehensive introduction to design and analysis of algorithms, and answers along the way to these and many other interesting computational questions. You will learn about problem-solving; advanced data structures such as universal hashing and red-black trees; advanced design and analysis techniques such as dynamic programming and amortized analysis; graph algorithms such as minimum spanning trees and network flows; NP-completeness theory; and approximation algorithms.","assessment_method":"Weekly homework","class_structure":{"Lab":{"day":"Tuesday","time":"14:00-15:30","mandatory":false,"duration":2},"Recitation":{"day":"Wednesday","time":"12:00-13:30","mandatory":false,"duration":2},"Lecture":{"day":"Friday","time":"08:00-09:30","mandatory":false,"duration":1}},"Course Quality":1.67,"Instructor Rating":1.83,"Course Difficulty":1.71,"Work Required":1.58,"Category":"General Electives"},{"title":"CIS\u00a03310  Introduction to Networks and Security","semester":"Fall","prerequisites":"Prerequisite: CIS\u00a01600 AND CIS\u00a02400","course_unit":"1 Course Unit","info":"This course introduces principles and practices of computer and network security. We will cover basic concepts, threat models, and the security mindset; an introduction to cryptography and cryptographic protocols including encryption, authentication, message authentication codes, hash functions, public-key cryptography, and secure channels; an introduction to networks and network security including IP, TCP, routing, network protcols, web architecture, attacks, firewalls, and intrusion detection systems; an introduction to software security including defensive programming, memory protection, buffer overflows, and malware; and discuss broader issues and case studies such as privacy, security and the law, digital rights management, denial of service, and ethics.","assessment_method":"Midterms","class_structure":{"Lecture":{"day":"Monday","time":"12:00-13:30","mandatory":false,"duration":3},"Lab":{"day":"Thursday","time":"16:00-17:30","mandatory":true,"duration":1},"Recitation":{"day":"Tuesday","time":"12:00-13:30","mandatory":false,"duration":3}},"Course Quality":1.59,"Instructor Rating":1.7,"Course Difficulty":1.65,"Work Required":1.67,"Category":"Engineering"},{"title":"CIS\u00a03340  Advanced Topics in Algorithms","semester":"Not Offered Every Year","prerequisites":"Prerequisite: CIS\u00a03200","course_unit":"1 Course Unit","info":"Can you check if two large documents are identical by examining a small number of bits? Can you verify that a program has correctly computed a function without ever computing the function? Can students compute the average score on an exam without ever revealing their scores to each other? Can you be convinced of the correctness of an assertion without ever seeing the proof? The answer to all these questions is in the affirmative provided we allow the use of randomization. Over the past few decades, randomization has emerged as a powerful resource in algorithm desgin. This course would focus on powerful general techniques for designing randomized algorithms as well as specific representative applications in various domains, including approximation algorithms, cryptography and number theory, data structure design, online algorithms, and parallel and distributed computation.","assessment_method":"Project plus midterms, Weekly tests","class_structure":{"Recitation":{"day":"Friday","time":"08:00-09:30","mandatory":false,"duration":1},"Lab":{"day":"Tuesday","time":"12:00-13:30","mandatory":false,"duration":1}},"Course Quality":1.86,"Instructor Rating":1.8,"Course Difficulty":1.62,"Work Required":1.77,"Category":"Engineering"},{"title":"CIS\u00a03500  Software Design\/Engineering","semester":"Not Offered Every Year","prerequisites":"Prerequisite: CIS\u00a01210","course_unit":"1 Course Unit","info":"You know how to write a \"program\". But how do you create a software \"product\" as part of a team, with customers that have expectations of functionality and quality? This course introduces students to various tools (source control, automated build systems, programming environments, test automation, etc.) and processes (design, implementation, testing, and maintenance) that are used by professionals in the field of software engineering. Topics will include: software development lifecycle; agile and test-driven development; source control and continuous integration; requirements analysis; object-oriented design and testability; mobile and\/or web application development; software testing; refactoring ; and software quality metrics.","assessment_method":"Weekly tests","class_structure":{"Lab":{"day":"Thursday","time":"10:00-11:30","mandatory":false,"duration":1}},"Course Quality":1.76,"Instructor Rating":1.81,"Course Difficulty":1.67,"Work Required":1.86,"Category":"Engineering"},{"title":"CIS\u00a03800  Computer Operating Systems","semester":"Fall","prerequisites":"Prerequisite: CIS\u00a02400","course_unit":"1 Course Unit","info":"This course surveys methods and algorithms used in modern operating systems. Concurrent distributed operation is emphasized. The main topics covered are as follows: process synchronization; interprocess communication; concurrent\/distributed programming languages; resource allocation and deadlock; virtual memory; protection and security; distributed operation; distributed data; performance evalaution.","assessment_method":"Weekly homework","class_structure":{"Lecture":{"day":"Tuesday","time":"10:00-11:30","mandatory":false,"duration":3},"Recitation":{"day":"Tuesday","time":"10:00-11:30","mandatory":true,"duration":2}},"Course Quality":1.66,"Instructor Rating":1.69,"Course Difficulty":1.93,"Work Required":1.67,"Category":"Technical Electives"},{"title":"CIS\u00a03900  Robotics: Planning Perception","semester":"Not Offered Every Year","prerequisites":"Prerequisite: CIS\u00a01210 AND MATH\u00a02400","course_unit":"1 Course Unit","info":"This introductory course will present basic principles of robotics with an emphasis to computer science aspects. Algorithms for planning and perception will be studied and implemented on actual robots. While planning is a fundamental problem in artificial intelligence and decision making, robot planning refers to finding a path from A to B in the presence of obstacles and by complying with the kinematic constraints of the robot. Perception involves the estimation of the robots motion and path as well as the shape of the environment from sensors. In this course, algorithms will be implemented in Python on mobile platforms on ground and in the air. No prior experience with Python is needed but we require knowledge of data structures, linear algebra, and basic probability.","assessment_method":"Project based, Weekly tests","class_structure":{"Lab":{"day":"Thursday","time":"12:00-13:30","mandatory":true,"duration":1}},"Course Quality":1.44,"Instructor Rating":1.82,"Course Difficulty":1.45,"Work Required":1.88,"Category":"Math and Natural Science"},{"title":"CIS\u00a03980  Quantum Computer and Information Science","semester":"Fall or Spring","prerequisites":"Prerequisite: (PHYS\u00a00151 OR PHYS\u00a00171) AND MATH\u00a02400 AND MATH\u00a03120 AND MATH\u00a03140 AND CIS\u00a01600 AND CIS\u00a02620","course_unit":"1 Course Unit","info":"The purpose of this course is to introduce undergraduate students in computer computer science and engineering to quantum computers (QC) and quantum information science (QIS). This course is meant primarly for juniors and seniors in Computer Science. No prior knowledge of quantum mechanics (QM) is assumed. Enrollment is by permission of the instructor.","assessment_method":"Weekly homework, Final exam","class_structure":{"Lecture":{"day":"Friday","time":"14:00-15:30","mandatory":false,"duration":3},"Lab":{"day":"Friday","time":"14:00-15:30","mandatory":true,"duration":3},"Recitation":{"day":"Friday","time":"10:00-11:30","mandatory":true,"duration":2}},"Course Quality":1.89,"Instructor Rating":1.69,"Course Difficulty":1.6,"Work Required":1.65,"Category":"Technical Electives"},{"title":"CIS\u00a03990  Special Topics","semester":"Not Offered Every Year","prerequisites":"No prerequisites listed","course_unit":"0.5-1 Course Unit","info":"Visit the CIS department website for descriptions of available Special Topics classes.","assessment_method":"Weekly tests, Final exam, Project plus midterms","class_structure":{"Lab":{"day":"Friday","time":"14:00-15:30","mandatory":true,"duration":2}},"Course Quality":1.76,"Instructor Rating":1.71,"Course Difficulty":1.71,"Work Required":1.58,"Category":"General Electives"},{"title":"CIS\u00a04010  Senior Project","semester":"Spring","prerequisites":"Prerequisite: CIS\u00a04000","course_unit":"1 Course Unit","info":"Continuation of CIS\u00a04000. Design and implementation of a significant piece of work: software, hardware or theory. Students are required to submit a final written report and give a final presentation and demonstration of their project. Grades are based on the report, the presentation and the satisfactory completion of the project. These are evaluated by the Project Adviser and the Course Instructor. Senior standing or permission of instructor.","assessment_method":"Weekly tests, Weekly homework","class_structure":{"Lecture":{"day":"Tuesday","time":"12:00-13:30","mandatory":false,"duration":1},"Recitation":{"day":"Monday","time":"12:00-13:30","mandatory":true,"duration":1},"Lab":{"day":"Friday","time":"16:00-17:30","mandatory":false,"duration":3}},"Course Quality":1.83,"Instructor Rating":1.77,"Course Difficulty":1.74,"Work Required":1.84,"Category":"Engineering"},{"title":"CIS\u00a04100  CIS Senior Thesis","semester":"No semester info","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"The goal of a Senior Thesis project is to complete a major research project under the supervision of a faculty member. The duration of the project is two semesters. To enroll in CIS\u00a04100, students must develop an abstract of the proposed work, and a member of the CIS graduate group must certify that the work is suitable and agree to supervise the project; a second member must agree to serve as a reader. At the end of the first semester, students must submit an intermediate report; if the supervisor and reader accept it, they can enroll in CIS\u00a04110. At the end of the second semester, students must describe their results in a written thesis and must present them publicly, either in a talk at Penn or in a presentation at a conference or workshop. Grades are based on the quality of the research itself (which should ideally be published or at least of publishable quality), as well as on the quality of the thesis and the oral presentation. The latter are evaluated jointly by the supervisor and the reader. The Senior Thesis program is selective, and students are generally expected to have a GPA is in the top 10-20% to qualify. Senior Theses are expected to integrate the knowledge and skills from earlier coursework; because of this, students are not allowed to enroll in CIS\u00a04100 before their sixth semester.","assessment_method":"Midterms","class_structure":{"Lab":{"day":"Wednesday","time":"14:00-15:30","mandatory":false,"duration":3}},"Course Quality":1.74,"Instructor Rating":1.82,"Course Difficulty":1.92,"Work Required":1.62,"Category":"Technical Electives"},{"title":"CIS\u00a04110  CIS Senior Thesis","semester":"No semester info","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"The goal of a Senior Thesis project is to complete a major research project under the supervision of a faculty member. The duration of the project is two semesters. To enroll in CIS\u00a04100, students must develop an abstract of the proposed work, and a member of the CIS graduate group must certify that the work is suitable and agree to supervise the project; a second member must agree to serve as a reader. At the end of the first semester, students must submit an intermediate report; if the supervisor and reader accept it, they can enroll in CIS\u00a04110. At the end of the second semester, students must describe their results in a written thesis and must present them publicly, either in a talk at Penn or in a presentation at a conference or workshop. Grades are based on the quality of the research itself (which should ideally be published or at least of publishable quality), as well as on the quality of the thesis and the oral presentation. The latter are evaluated jointly by the supervisor and the reader. The Senior Thesis program is selective, and students are generally expected to have a GPA is in the top 10-20% to qualify.","assessment_method":"Weekly tests plus final exam, Weekly tests, Weekly homework","class_structure":{"Recitation":{"day":"Monday","time":"14:00-15:30","mandatory":true,"duration":3},"Lab":{"day":"Tuesday","time":"10:00-11:30","mandatory":false,"duration":1}},"Course Quality":1.8,"Instructor Rating":1.26,"Course Difficulty":1.72,"Work Required":1.74,"Category":"Engineering"},{"title":"CIS\u00a04190  Applied Machine Learning","semester":"Fall or Spring","prerequisites":"Prerequisite: CIS\u00a01210","course_unit":"1 Course Unit","info":"Machine learning has been essential to the success of many recent technologies, including autonomous vehicles, search engines, genomics, automated medical diagnosis, image recognition, and social network analysis, among many others. This course will introduce the fundamental concepts and algorithms that enable computers to learn from experience, with an emphasis on their practical application to real problems. This course will introduce supervised learning (decision trees, logistic regression, support vector machines, Bayesian methods, neural networks and deep learning), unsupervised learning (clustering, dimensionality reduction), and reinforcement learning. Additionally, the course will discuss evaluation methodology and recent applications of machine learning, including large scale learning for big data and network analysis.","assessment_method":"Weekly tests","class_structure":{"Lab":{"day":"Wednesday","time":"12:00-13:30","mandatory":true,"duration":3},"Lecture":{"day":"Thursday","time":"14:00-15:30","mandatory":false,"duration":2}},"Course Quality":1.66,"Instructor Rating":1.63,"Course Difficulty":1.83,"Work Required":1.81,"Category":"Technical Electives"},{"title":"CIS\u00a04210  Artificial Intelligence","semester":"Fall","prerequisites":"Prerequisite: CIS\u00a01210 AND (ESE\u00a03010 OR STAT\u00a04300)","course_unit":"1 Course Unit","info":"This course investigates algorithms to implement resource-limited knowledge-based agents which sense and act in the world. Topics include, search, machine learning, probabilistic reasoning, natural language processing, knowledge representation and logic. After a brief introduction to the language, programming assignments will be in Python.","assessment_method":"Project plus midterms, Weekly homework, Weekly tests","class_structure":{"Lecture":{"day":"Monday","time":"10:00-11:30","mandatory":true,"duration":1}},"Course Quality":1.71,"Instructor Rating":1.67,"Course Difficulty":1.81,"Work Required":1.78,"Category":"Engineering"},{"title":"CIS\u00a04230  Ethical Algorithm Design","semester":"Fall or Spring","prerequisites":"Prerequisite: CIS\u00a01210","course_unit":"1 Course Unit","info":"This class introduces aspiring data science technologists to the spectrum of ethical concerns, focusing on social norms like fairness, transparency and privacy. It introduces technical approaches to a number of these problems, including by hands-on examination of the tradeoffs in fairness and accuracy in predictive technology, introduction to differential privacy, and overview of evaluation conventions for predictive technology. It also provides guidelines for examining system training data for bias, representation (of race, gender and other characteristics) and ecological validity. Equipped with this knowledge, students will learn how to conduct informed analysis of the usefulness of predictive systems; they will audit for ethical concerns papers from the contemporary top artificial intelligence venues and the ongoing senior design projects.","assessment_method":"Final exam","class_structure":{"Lab":{"day":"Monday","time":"08:00-09:30","mandatory":true,"duration":2},"Lecture":{"day":"Friday","time":"08:00-09:30","mandatory":false,"duration":2}},"Course Quality":1.91,"Instructor Rating":1.51,"Course Difficulty":1.59,"Work Required":1.64,"Category":"Engineering"},{"title":"CIS\u00a04360  Introduction to Computational Biology & Biological Modeling","semester":"Fall","prerequisites":"Prerequisite: MATH\u00a01400 AND (BIOL\u00a02510  OR BIOL\u00a05510)","course_unit":"1 Course Unit","info":"The goal of this course is to develop a deeper understanding of techniques and concepts used in Computational Biology. The course will strive to focus on a small set of approaches to gain both theoretical and practical understanding of the methods. We will aim to cover practical issues such as programming and the use of programs, as well as theoretical issues such as algorithm design, statistical data analysis, theory of algorithms and statistics. This course WILL NOT provide a broad survey of the field nor teach specific tools but focus on a deep understanding of a small set of topics. We will discuss string algorithms, hidden markov models, dimension reduction, and machine learning (or phylogeny estimation) for biomedical problems.","assessment_method":"Project based, Weekly tests plus final exam","class_structure":{"Lab":{"day":"Thursday","time":"08:00-09:30","mandatory":true,"duration":3},"Lecture":{"day":"Monday","time":"10:00-11:30","mandatory":false,"duration":3},"Recitation":{"day":"Thursday","time":"10:00-11:30","mandatory":true,"duration":2}},"Course Quality":1.93,"Instructor Rating":1.78,"Course Difficulty":1.78,"Work Required":1.92,"Category":"Engineering"},{"title":"CIS\u00a04410  Embedded Software for Life-Critical Applications","semester":"Fall or Spring","prerequisites":"Prerequisite: CIS\u00a02400","course_unit":"1 Course Unit","info":"The goal of this course is to give students greater design and implementation experience in embedded software development and to teach them how to model, design, verify, and validate safety critical systems in a principled manner. Students will learn the principles, methods, and techniques for building life-critical embedded systems, ranging from requirements and models to design, analysis, optimization, implementation, and validation. Topics will include modeling and analysis methods and tools, real-time programming paradigms and languages, distributed real-time systems, global time, time-triggered communications, assurance case, software architecture, evidence-based certification, testing, verification, and validation. The course will include a series of projects that implements life-critical embedded systems (e.g., pacemaker, infusion pumps, closed-loop medical devices).","assessment_method":"Midterms, Project plus midterms","class_structure":{"Lecture":{"day":"Wednesday","time":"08:00-09:30","mandatory":false,"duration":1},"Lab":{"day":"Tuesday","time":"12:00-13:30","mandatory":true,"duration":3},"Recitation":{"day":"Monday","time":"10:00-11:30","mandatory":true,"duration":1}},"Course Quality":1.7,"Instructor Rating":1.85,"Course Difficulty":1.73,"Work Required":1.88,"Category":"Technical Electives"},{"title":"CIS\u00a04500  Database and Information Systems","semester":"Fall","prerequisites":"Prerequisite: CIS\u00a01210 AND CIS\u00a01600","course_unit":"1 Course Unit","info":"This course provides an introduction to the broad field of database and information systems, covering a variety of topics relating to structured data, ranging from data modeling to logical foundations and popular languages, to system implementations. We will study the theory of relational and XML data design; the basics of query languages; efficient storage of data, execution of queries and query optimization; transactions and updates; web-database development; and \"big data\" and NoSQL systems. The course assumes mathematical and programming experience equivalent to CIS\u00a01600 and CIS\u00a01210.","assessment_method":"Project plus midterms","class_structure":{"Lecture":{"day":"Tuesday","time":"16:00-17:30","mandatory":false,"duration":2},"Lab":{"day":"Wednesday","time":"14:00-15:30","mandatory":false,"duration":3},"Recitation":{"day":"Thursday","time":"08:00-09:30","mandatory":true,"duration":1}},"Course Quality":1.83,"Instructor Rating":1.83,"Course Difficulty":1.63,"Work Required":1.92,"Category":"General Electives"},{"title":"CIS\u00a04600  Interactive Computer Graphics","semester":"Fall","prerequisites":"Prerequisite: CIS\u00a01200 AND CIS\u00a01210 AND CIS\u00a02400","course_unit":"1 Course Unit","info":"This course focuses on programming the essential mathematical and geometric concepts underlying modern computer graphics. Using 3D interactive implementations, it covers fundamental topics such as mesh data structures, transformation sequences, rendering algorithms, and curve interpolation for animation. Students are also introduced to two programming languages widely used in the computer graphics industry: C++ and GLSL. The curriculum is heavily project-based, and culminates in a group project focused on building an interactive first-person world exploration application using the various real-time interaction and rendering algorithms learned throughout the semester.","assessment_method":"Final exam, Project based, Project plus midterms","class_structure":{"Lecture":{"day":"Tuesday","time":"08:00-09:30","mandatory":false,"duration":3},"Recitation":{"day":"Friday","time":"12:00-13:30","mandatory":true,"duration":1},"Lab":{"day":"Tuesday","time":"16:00-17:30","mandatory":true,"duration":1}},"Course Quality":1.42,"Instructor Rating":1.61,"Course Difficulty":1.79,"Work Required":1.56,"Category":"Technical Electives"},{"title":"CIS\u00a04670  Scientific Computing","semester":"No semester info","prerequisites":"Prerequisite: MATH\u00a02400","course_unit":"1 Course Unit","info":"This course will focus on numerical algorithms and scientific computing techniques that are practical and efficient for a number of canonical science and engineering applications. Built on top of classical theories in multi-variable calculus and linear algebra (as a prerequisite), the lectures in this course will strongly focus on explaining numerical methods for applying these mathematical theories to practical engineering problems. Students will be expected to implement solutions and software tools using MATLAB\/C++, practice state-of-the-art parallel computing paradigms, and learn scientific visualization techniques using modern software packages. Prerequisites: MATH 240; knowledge of C++, Python or MATLAB","assessment_method":"Weekly tests, Midterms","class_structure":{"Recitation":{"day":"Friday","time":"12:00-13:30","mandatory":false,"duration":1},"Lecture":{"day":"Wednesday","time":"08:00-09:30","mandatory":true,"duration":3}},"Course Quality":1.91,"Instructor Rating":1.72,"Course Difficulty":1.6,"Work Required":1.46,"Category":"Engineering"},{"title":"CIS\u00a04970  DMD Senior Project","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"The goal of this course is to provide an opportunity for seniors to define, desand execute a project of your own choosing that demonstrates the technical skiland abilities that you have acquired during your 4 years as undergraduates. Evaluation is based on selecting an interesting topic, completing appropriate research on the state of the art in that area, communicating your objectives i writing and in presentations, accurately estimating what resources will be reqto complete your chosen task, coding necessary functionality, and executing your plan. Senior Standing or Permission of the instructor.","assessment_method":"Project plus midterms","class_structure":{"Lab":{"day":"Wednesday","time":"16:00-17:30","mandatory":true,"duration":1},"Lecture":{"day":"Friday","time":"12:00-13:30","mandatory":true,"duration":1}},"Course Quality":1.78,"Instructor Rating":1.64,"Course Difficulty":1.61,"Work Required":1.74,"Category":"General Electives"},{"title":"CIS\u00a04980  Senior Capstone Project","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"The Senior Capstone Project is required for all BAS degree students, in lieu of the senior design course. The Capstone Project provides an opportunity for the student to apply the theoretical ideas and tools learned from other courses. The project is usually applied, rather than theoretical, exercise, and should focus on a real-world problem related to the career goals of the student. The one-semester project may be completed in either the fall or spring term of the senior year, and must be done under the supervision of a sponsoring faculty member. To register for this course, the student must submit a detailed proposal, signed by the supervising professor and the student's faculty advisor, two weeks prior to the start of the term.","assessment_method":"Project plus midterms","class_structure":{"Recitation":{"day":"Wednesday","time":"14:00-15:30","mandatory":true,"duration":3},"Lab":{"day":"Monday","time":"08:00-09:30","mandatory":true,"duration":2},"Lecture":{"day":"Friday","time":"16:00-17:30","mandatory":true,"duration":2}},"Course Quality":1.52,"Instructor Rating":1.71,"Course Difficulty":1.5,"Work Required":1.81,"Category":"Math and Natural Science"},{"title":"CIS\u00a05010  Computer Architecture","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"This course is an introductory graduate course on computer architecture with an emphasis on a quantitative approach to cost\/performance design tradeoffs. The course covers the fundamentals of classical and modern uniprocessor design: performance and cost issues, instruction sets, pipelining, superscalar, out-of-order, and speculative execution mechanisms, caches, physical memory, virtual memory, and I\/O. Other topics include: static scheduling, VLIW and EPIC, software speculation, long (SIMD) and short (multimedia) vector execution, multithreading, and an introduction to shared memory multiprocessors. Knowledge of computer organization and basic programming skills.","assessment_method":"Weekly tests plus final exam, Midterms, Final exam","class_structure":{"Lecture":{"day":"Wednesday","time":"12:00-13:30","mandatory":false,"duration":3},"Recitation":{"day":"Wednesday","time":"16:00-17:30","mandatory":false,"duration":3},"Lab":{"day":"Wednesday","time":"10:00-11:30","mandatory":false,"duration":2}},"Course Quality":1.85,"Instructor Rating":1.81,"Course Difficulty":1.92,"Work Required":1.58,"Category":"Technical Electives"},{"title":"CIS\u00a05110  Theory of Computation","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"Review of regular and context-free languages and machine models. Turing machines and RAM models, Decidability, Halting problem, Reductions, Recursively enumerable sets, Universal TMs, Church\/Turing thesis. Time and space complexity, hierarchy theorems, the complexity classes P, NP, PSPACE, L, NL, and co-NL. Reductions revisited, Cook-Levin Theorem, completeness, NL = co-NL. Advanced topics as time permits: Circuit complexity and parallel computation, randomized complexity, approximability, interaction and cryptography. Discrete Mathematics, Automata theory or Algorithms at the undergraduate level.","assessment_method":"Project based, Midterms, Weekly homework","class_structure":{"Recitation":{"day":"Friday","time":"12:00-13:30","mandatory":true,"duration":2},"Lab":{"day":"Monday","time":"16:00-17:30","mandatory":false,"duration":2}},"Course Quality":1.89,"Instructor Rating":1.65,"Course Difficulty":1.4,"Work Required":1.69,"Category":"General Electives"},{"title":"CIS\u00a05150  Fundamentals of Linear Algebra and Optimization","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"This course provides firm foundations in linear algebra and basic optimization techniques. Emphasis is placed on teaching methods and tools that are widely used in various areas of computer science. Both theoretical and algorithmic aspects will be discussed.","assessment_method":"Midterms, Weekly tests, Weekly homework","class_structure":{"Lecture":{"day":"Monday","time":"16:00-17:30","mandatory":false,"duration":1},"Lab":{"day":"Monday","time":"08:00-09:30","mandatory":false,"duration":3}},"Course Quality":1.82,"Instructor Rating":1.47,"Course Difficulty":1.49,"Work Required":1.37,"Category":"Math and Natural Science"},{"title":"CIS\u00a05180  Topics in Logic: Finite Model Theory and Descriptive Complexity","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"This course will examine the expressive power of various logical languages over the class of finite structures. The course begins with an exposition of some of the fundamental theorems about the behavior of first-order logic in the context of finite structures, in particular, the Ehrenfeucht-Fraisse Theorem and the Trahktenbrot Theorem. The first of these results is used to show limitations on the expressive power of first-order logic over finite structures while the second result demonstrates that the problem of reasoning about finite structures using first-order logic is surprisingly complex. The course then proceeds to consider various extensions of first-order logic including fixed-point operators, generalized quantifiers, infinitary languages, and higher-order languages. The expressive power of these extensions will be studied in detail and will be connected to various problems in the theory of computational complexity. This last motif, namely the relation between descriptive and computational complexity, will be one of the main themes of the course.","assessment_method":"Project plus midterms","class_structure":{"Lecture":{"day":"Tuesday","time":"14:00-15:30","mandatory":true,"duration":3}},"Course Quality":1.74,"Instructor Rating":1.75,"Course Difficulty":1.77,"Work Required":1.75,"Category":"Technical Electives"},{"title":"CIS\u00a05190  Applied Machine Learning","semester":"Fall or Spring","prerequisites":"Prerequisite: CIS\u00a01210","course_unit":"1 Course Unit","info":"Machine learning has been essential to the success of many recent technologies, including autonomous vehicles, search engines, genomics, automated medical diagnosis, image recognition, and social network analysis, among many others. This course will introduce the fundamental concepts and algorithms that enable computers to learn from experience, with an emphasis on their practical application to real problems. This course will introduce supervised learning (decision trees, logistic regression, support vector machines, Bayesian methods, neural networks and deep learning), unsupervised learning (clustering, dimensionality reduction), and reinforcement learning. Additionally, the course will discuss evaluation methodology and recent applications of machine learning, including large scale learning for big data and network analysis.","assessment_method":"Midterms, Project based","class_structure":{"Recitation":{"day":"Monday","time":"10:00-11:30","mandatory":false,"duration":3}},"Course Quality":1.79,"Instructor Rating":1.74,"Course Difficulty":1.34,"Work Required":1.63,"Category":"Technical Electives"},{"title":"CIS\u00a05200  Machine Learning","semester":"Fall","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"This course covers the foundations of statistical machine learning. The focus is on probabilistic and statistical methods for prediction and clustering in high dimensions. Topics covered include linear and logistic regression, SVMs, PCA and dimensionality reduction, EM and HMMs, and deep learning. Elementary probability, calculus, and linear algebra. Basic programming experience.","assessment_method":"Project plus midterms","class_structure":{"Lab":{"day":"Monday","time":"14:00-15:30","mandatory":false,"duration":1}},"Course Quality":1.59,"Instructor Rating":1.92,"Course Difficulty":1.83,"Work Required":1.64,"Category":"Engineering"},{"title":"CIS\u00a05210  Artificial Intelligence","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"This course investigates algorithms to implement resource-limited knowledge-based agents which sense and act in the world. Topics include, search, machine learning, probabilistic reasoning, natural language processing, knowledge representation and logic. After a brief introduction to the language, programming assignments wil l be in Python.","assessment_method":"Weekly tests plus final exam, Weekly homework","class_structure":{"Recitation":{"day":"Thursday","time":"12:00-13:30","mandatory":false,"duration":3},"Lab":{"day":"Thursday","time":"14:00-15:30","mandatory":false,"duration":3}},"Course Quality":1.82,"Instructor Rating":1.49,"Course Difficulty":1.81,"Work Required":1.98,"Category":"Math and Natural Science"},{"title":"CIS\u00a05220  Deep Learning for Data Science","semester":"Fall","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"Deep learning techniques now touch on data systems of all varieties. Sometimes, deep learning is a product; sometimes, deep learning optimizes a pipeline; sometimes, deep learning provides critical insights; sometimes, deep learning sheds light on neuroscience or vice versa. The purpose of this course is to deconstruct the hype by teaching deep learning theories, models, skills, and applications that are useful for applications.","assessment_method":"Final exam, Midterms","class_structure":{"Recitation":{"day":"Wednesday","time":"10:00-11:30","mandatory":true,"duration":3}},"Course Quality":1.75,"Instructor Rating":1.78,"Course Difficulty":1.79,"Work Required":1.82,"Category":"Math and Natural Science"},{"title":"CIS\u00a05230  Ethical Algorithm Design","semester":"Fall or Spring","prerequisites":"Prerequisite: CIS\u00a01210","course_unit":"1 Course Unit","info":"This class introduces aspiring data science technologists to the spectrum of ethical concerns, focusing on social norms like fairness, transparency and privacy. It introduces technical approaches to a number of these problems, including by hands-on examination of the tradeoffs in fairness and accuracy in predictive technology, introduction to differential privacy, and overview of evaluation conventions for predictive technology. It also provides guidelines for examining system training data for bias, representation (of race, gender and other characteristics) and ecological validity. Equipped with this knowledge, students will learn how to conduct informed analysis of the usefulness of predictive systems; they will audit for ethical concerns papers from the contemporary top artificial intelligence venues and the ongoing senior design projects.","assessment_method":"Weekly homework, Final exam, Project based","class_structure":{"Lab":{"day":"Wednesday","time":"08:00-09:30","mandatory":false,"duration":2},"Recitation":{"day":"Monday","time":"08:00-09:30","mandatory":true,"duration":3},"Lecture":{"day":"Tuesday","time":"10:00-11:30","mandatory":true,"duration":3}},"Course Quality":1.69,"Instructor Rating":1.72,"Course Difficulty":1.76,"Work Required":1.74,"Category":"Math and Natural Science"},{"title":"CIS\u00a05260  Machine Translation","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"Google translate can instantly translate between any pair of over fifty human languages (for instance, from French to English). How does it do that? Why does it make the errors that it does? And how can you build something better? Modern translation systems like Google Translate and Bing Translator learn how to translate by reading millions of words of already translated text, and this course will show you how they work. The course covers a diverse set of fundamental building blocks from linguistics, machine learning, algorithms, data structures , and formal language theory, along with their application to a real and difficult problem in artificial intelligence.","assessment_method":"Final exam, Weekly homework, Midterms","class_structure":{"Lecture":{"day":"Tuesday","time":"16:00-17:30","mandatory":false,"duration":2},"Lab":{"day":"Monday","time":"14:00-15:30","mandatory":false,"duration":3}},"Course Quality":1.7,"Instructor Rating":1.88,"Course Difficulty":1.86,"Work Required":1.86,"Category":"Engineering"},{"title":"CIS\u00a05300  Natural Language Processing","semester":"Fall","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"This course provides an overview of the field of natural language processing. The goal of the field is to build technologies that will allow machines to understand human languages. Applications include machine translation, automatic summarization, question answering systems, and dialog systems. NLP is used in technologies like Amazon Alexa and Google Translate.","assessment_method":"Project plus midterms, Weekly tests","class_structure":{"Recitation":{"day":"Friday","time":"12:00-13:30","mandatory":true,"duration":2}},"Course Quality":1.79,"Instructor Rating":1.63,"Course Difficulty":1.67,"Work Required":1.76,"Category":"Engineering"},{"title":"CIS\u00a05350  Introduction to Bioinformatics","semester":"Fall","prerequisites":"Prerequisite: BIOL\u00a04210 OR BIOL\u00a05210 OR BIOL\u00a05240","course_unit":"1 Course Unit","info":"This course provides overview of bioinformatics and computational biology as applied to biomedical research. A primary objective of the course is to enable students to integrate modern bioinformatics tools into their research activities. Course material is aimed to address biological questions using computational approaches and the analysis of data. A basic primer in programming and operating in a UNIX enviroment will be presented, and students will also be introduced to Python R, and tools for reproducible research. This course emphasizes direct, hands-on experience with applications to current biological research problems. Areas include DNA sequence alignment, genetic variation and analysis, motif discovery, study design for high-throughput sequencing RNA, and gene expression, single gene and whole-genome analysis, machine learning, and topics in systems biology. The relevant principles underlying methods used for analysis in these areas will be introduced and discussed at a level appropriate for biologists without a background in computer science. The course is not intended for computer science students who want to learn about biologically motivated algorithmic problems; BIOL\u00a04536\/BIOL\u00a05536 and BE\u00a05370\/CIS\u00a05370\/MPHY\u00a06090 are more appropriate. Prerequisites: An advanced undergraduate course such as BIOL\u00a04210 or a graduate course in biology such as BIOL\u00a05210, BIOL\u00a05240, or equivalent, is a prerequisite.","assessment_method":"Project plus midterms","class_structure":{"Lab":{"day":"Friday","time":"14:00-15:30","mandatory":false,"duration":3}},"Course Quality":1.73,"Instructor Rating":1.79,"Course Difficulty":1.78,"Work Required":1.49,"Category":"Math and Natural Science"},{"title":"CIS\u00a05360  Fundamentals of Computational Biology","semester":"Fall","prerequisites":"Prerequisite: ((BIOL\u00a01101 AND BIOL\u00a01102) OR BIOL\u00a01121) AND STAT 111 AND STAT 112","course_unit":"1 Course Unit","info":"Introductory computational biology course designed for both biology students and computer science, engineering students. The course will cover fundamentals of algorithms, statistics, and mathematics as applied to biological problems. In particular, emphasis will be given to biological problem modeling and understanding the algorithms and mathematical procedures at the \"pencil and paper\" level. That is, practical implementation of the algorithms is not taught but principles of the algorithms are covered using small sized examples. Topics to be covered are: genome annotation and string algorithms, pattern search and statistical learning, molecular evolution and phylogenetics, functional genomics and systems level analysis.","assessment_method":"Project plus midterms, Project based","class_structure":{"Lecture":{"day":"Wednesday","time":"12:00-13:30","mandatory":true,"duration":3},"Lab":{"day":"Monday","time":"08:00-09:30","mandatory":false,"duration":2}},"Course Quality":1.94,"Instructor Rating":1.6,"Course Difficulty":1.82,"Work Required":1.6,"Category":"Technical Electives"},{"title":"CIS\u00a05400  Principles of Embedded Computation","semester":"Fall","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"This course is focused on principles underlying design and analysis of computational elements that interact with the physical environment. Increasingly, such embedded computers are everywhere, from smart cameras to medical devices to automobiles. While the classical theory of computation focuses on the function that a program computes, to understand embedded computation, we need to focus on the reactive nature of the interaction of a component with its environment via inputs and outputs, the continuous dynamics of the physical world, different ways of communication among components, and requirements concerning safety, timeliness, stability, and performance. Developing tools for approaching design, analysis, and implementation of embedded systems in a principled manner is an active research area. This course will attempt to give students a coherent introduction to this emerging area. This course is appropriate as an upper-level undergraduate CIS elective. This course assumes mathematical maturity, commensurate with either ESE\u00a02100 (Introduction to Dynamical Systems), or CIS\u00a02620 (Introduction to Theory of Computation). It is suitable for students who have an undergraduate degree in computer science, or computer engineering, or electrical engineering. It is also suitable for Penn undergraduates in CIS or CE as an upper-level elective.","assessment_method":"Weekly tests plus final exam, Weekly homework, Project based","class_structure":{"Lab":{"day":"Thursday","time":"10:00-11:30","mandatory":false,"duration":3}},"Course Quality":1.95,"Instructor Rating":1.87,"Course Difficulty":1.57,"Work Required":1.75,"Category":"Math and Natural Science"},{"title":"CIS\u00a05410  Embedded Software for Life-Critical Applications","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"The goal of this course is to give students greater design and implementation experience in embedded software development and to teach them how to model, design, verify, and validate safety critical systems in a principled manner. Students will learn the principles, methods, and techniques for building life-critical embedded systems, ranging from requirements and models to design, analysis, optimization, implementation, and validation. Topics will include modeling and analysis methods and tools, real-time programming paradigms and languages, distributed real-time systems, global time, time-triggered communications, assurance case, software architecture, evidence-based certification, testing, verification, and validation. The course will include a series of projects that implements life-critical embedded systems (e.g., pacemaker, infusion pumps, closed-loop medical devices). This course assumes experience equivalent to CIS\u00a02400 (Introduction to Computer Systems).","assessment_method":"Weekly tests, Weekly homework","class_structure":{"Lecture":{"day":"Friday","time":"12:00-13:30","mandatory":true,"duration":2}},"Course Quality":1.59,"Instructor Rating":1.39,"Course Difficulty":1.49,"Work Required":1.61,"Category":"General Electives"},{"title":"CIS\u00a05420  Embedded Systems Programming","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"This course explores techniques for writing correct and efficient embedded code. Topics include C\/C++ idioms, data abstraction, elementary data structures and algorithms, environment modeling, concurrency, hard real time, and modular program reasoning. C fluency.","assessment_method":"Weekly homework, Weekly tests","class_structure":{"Lecture":{"day":"Thursday","time":"12:00-13:30","mandatory":false,"duration":2},"Lab":{"day":"Tuesday","time":"16:00-17:30","mandatory":true,"duration":1},"Recitation":{"day":"Thursday","time":"10:00-11:30","mandatory":false,"duration":1}},"Course Quality":1.52,"Instructor Rating":1.72,"Course Difficulty":1.6,"Work Required":1.79,"Category":"Engineering"},{"title":"CIS\u00a05450  Big Data Analytics","semester":"Fall, Spring, and Summer Terms","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"In the new era of big data, we are increasingly faced with the challenges of processing vast volumes of data. Given the limits of individual machines (compute power, memory, bandwidth), increasingly the solution is to process the data in parallel on many machines. This course focuses on the fundamentals of scaling computation to handle common data analytics tasks. You will learn about basic tasks in collecting, wrangling, and structuring data; programming models for performing certain kinds of computation in a scalable way across many compute nodes; common approaches to converting algorithms to such programming models; standard toolkits for data analysis consisting of a wide variety of primitives; and popular distributed frameworks for analytics tasks such as filtering, graph analysis, clustering, and classification. Recommended: broad familiarity with probability and statistics, as well as programming in Python. Additional background in statistics, data analysis (e.g., in Matlab or R), and machine learning is helpful (example : ESE\u00a05420).","assessment_method":"Weekly homework, Project plus midterms, Project based","class_structure":{"Recitation":{"day":"Thursday","time":"12:00-13:30","mandatory":true,"duration":3}},"Course Quality":1.81,"Instructor Rating":1.78,"Course Difficulty":1.55,"Work Required":1.62,"Category":"Math and Natural Science"},{"title":"CIS\u00a05470  Software Analysis","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"This course covers the theory and practice of software analysis - a body of algorithms and techniques to reason about program behavior with applications to effectively test, debug, and secure large, complex codebases. The course surveys a wide range of applications of software analysis including proving the absence of common programming errors, discovering and preventing security vulnerabilities, systematically testing intricate data structures and libraries, and localizing root causes in complex software failures. Familiarity with programming (CIS\u00a01200), algorithms (CIS\u00a01210), and mathematical foundations (CIS\u00a01600). Specifically: - Assignments involve programming in C\/C++ in the LLVM compiler infrastructure. - Lectures and exams presume knowledge of search and graph algorithms, and background in logic and probability.","assessment_method":"Weekly tests plus final exam","class_structure":{"Lecture":{"day":"Friday","time":"08:00-09:30","mandatory":true,"duration":2}},"Course Quality":1.88,"Instructor Rating":1.63,"Course Difficulty":1.75,"Work Required":1.84,"Category":"Technical Electives"},{"title":"CIS\u00a05480  Operating Systems Design and Implementation","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"The purpose of this masters-level course is to teach the design and implementation Of operating systems and operating systems concepts that appear in other advanced systems. The course divides into three major sections. The first part of the course discusses concurrency: how to manage multiple tasks that execute at the same time and share resources. Topics in this section include processes and threads, context switching, synchronization, scheduling, and deadlock. The second part of the course addresses the problem of memory management; it will cover topics such as linking, dynamic memory allocation, dynamic address translation, virtual memory, and demand paging. The third major part of the course concerns file systems, including topics such as storage devices, disk management and scheduling, directories, protection, and crash recovery. After these three major topics, the class will conclude with specialized topics such as virtual machines and case studies of different operating systems (e.g. Android, Windows, Linux, etc.).","assessment_method":"Midterms","class_structure":{"Lecture":{"day":"Thursday","time":"08:00-09:30","mandatory":false,"duration":3},"Recitation":{"day":"Wednesday","time":"08:00-09:30","mandatory":false,"duration":1}},"Course Quality":1.89,"Instructor Rating":1.58,"Course Difficulty":1.65,"Work Required":1.78,"Category":"Technical Electives"},{"title":"CIS\u00a05490  Wireless Communications for Mobile Networks and Internet of Things","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"This course covers generations of wireless mobile network standards and systems, basic differences and their evolution, charting the development of mobile telecommunications systems from 3G, to today's state-of-the-art wireless technology 4G LTE, and the next generation wireless technology, 5G. The course projects require knowledge of C\/C++. Any undergraduate networking courses are suggested but not required as this course covers necessary networking topics.","assessment_method":"Project plus midterms, Weekly tests plus final exam, Midterms","class_structure":{"Recitation":{"day":"Wednesday","time":"12:00-13:30","mandatory":true,"duration":1}},"Course Quality":1.56,"Instructor Rating":1.9,"Course Difficulty":1.87,"Work Required":1.66,"Category":"General Electives"},{"title":"CIS\u00a05500  Database and Information Systems","semester":"Fall","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"This course provides an introduction to the broad field of database and information systems, covering a variety of topics relating to structured data, ranging from data modeling to logical foundations and popular languages, to system implementations. We will study the theory of relational and XML data design; the basics of query languages; efficient storage of data, execution of queries and query optimization; transactions and updates; web-database development; and \"big data\" and NoSQL systems. The course assumes mathematical and programming experience equivalent to CIS\u00a01600 and CIS\u00a01210.","assessment_method":"Project based, Project plus midterms","class_structure":{"Recitation":{"day":"Monday","time":"12:00-13:30","mandatory":true,"duration":1}},"Course Quality":1.89,"Instructor Rating":1.74,"Course Difficulty":1.5,"Work Required":1.44,"Category":"Technical Electives"},{"title":"CIS\u00a05510  Computer and Network Security","semester":"Fall or Spring","prerequisites":"Prerequisite: CIS\u00a01600 AND CIS\u00a02400","course_unit":"1 Course Unit","info":"This is an introduction to topics in the security of computer systems and communication on networks of computers. The course covers four major areas: fundamentals of cryptography, security for communication protocols, security for operating systems and mobile programs, and security for electronic commerce. Sample specific topics include: passwords and offline attacks, DES, RSA, DSA, SHA, SSL, CBC, IPSec, SET, DDoS attacks, biometric authentication, PKI, smart cards, S\/MIME, privacy on the Web, viruses, security models, wireless security, and sandboxing. Students will be expected to display knowledge of both theory and practice through written examinations and programming assignments.","assessment_method":"Weekly tests, Weekly tests plus final exam","class_structure":{"Lecture":{"day":"Monday","time":"08:00-09:30","mandatory":true,"duration":1},"Lab":{"day":"Monday","time":"08:00-09:30","mandatory":false,"duration":1}},"Course Quality":1.71,"Instructor Rating":1.78,"Course Difficulty":1.59,"Work Required":1.7,"Category":"General Electives"},{"title":"CIS\u00a05520  Advanced Programming","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"The goals of this course are twofold: (1) to take good programmers and turn them into excellent ones, and (2) to introduce them to a range of modern software engineering practices, in particular those embodied in advanced functional programming languages. Four courses involving significant programming and a discrete mathematics or modern algebra course. Enrollment by permission of the instructor only.","assessment_method":"Project plus midterms","class_structure":{"Lecture":{"day":"Friday","time":"16:00-17:30","mandatory":true,"duration":3},"Lab":{"day":"Wednesday","time":"16:00-17:30","mandatory":false,"duration":3}},"Course Quality":1.69,"Instructor Rating":1.59,"Course Difficulty":1.7,"Work Required":1.58,"Category":"Math and Natural Science"},{"title":"CIS\u00a05530  Networked Systems","semester":"Fall or Spring","prerequisites":"Prerequisite: CIS\u00a01210","course_unit":"1 Course Unit","info":"This course provides an introduction to fundamental concepts in the design and implementation of networked systems, their protocols, and applications. Topics to be covered include: Internet architecture, network applications, addressing, routing, transport protocols, network security, and peer-to-peer networks. The course will involve written assignments, examinations, and programming assignments.. Students will work in teams to design and implement networked systems in layers, from routing protocols, transport protocols, to peer-to-peer networks.","assessment_method":"Weekly homework","class_structure":{"Recitation":{"day":"Tuesday","time":"08:00-09:30","mandatory":true,"duration":2},"Lecture":{"day":"Monday","time":"12:00-13:30","mandatory":false,"duration":1},"Lab":{"day":"Wednesday","time":"12:00-13:30","mandatory":false,"duration":3}},"Course Quality":1.74,"Instructor Rating":1.48,"Course Difficulty":1.82,"Work Required":2.07,"Category":"Technical Electives"},{"title":"CIS\u00a05540  Programming Paradigms","semester":"Fall or Spring","prerequisites":"Prerequisite: CIS\u00a01210 OR CIT\u00a05940","course_unit":"1 Course Unit","info":"Achieving mastery in a new programming language requires more than just learning a new syntax; rather, different languages support different ways to think about solving problems. Not all programming languages are inherently procedural or object-oriented. The intent of this course is to provide a basic understanding of a wide variety of programming paradigms, such as logic programming, functional programming, concurrent programming, rule-based programming, and others.","assessment_method":"Weekly tests plus final exam, Weekly homework","class_structure":{"Lab":{"day":"Thursday","time":"08:00-09:30","mandatory":false,"duration":2},"Lecture":{"day":"Wednesday","time":"16:00-17:30","mandatory":false,"duration":1},"Recitation":{"day":"Wednesday","time":"10:00-11:30","mandatory":true,"duration":3}},"Course Quality":1.8,"Instructor Rating":1.65,"Course Difficulty":1.59,"Work Required":1.66,"Category":"Math and Natural Science"},{"title":"CIS\u00a05560  Cryptography","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"This course is an introduction to cryptography, both theory and applications, intended for advanced undergraduates and graduate students. Topics covered include symmetric cryptography, message authentication, public-key cryptography, digital signatures, cryptanalysis, cryptographic security, and secure channels, as well as a selection of more advanced topics such as zero-knowledge proofs, secure multiparty computation, privacy-enhancing technologies, or lattice-based cryptography.","assessment_method":"Final exam, Project based, Project plus midterms","class_structure":{"Recitation":{"day":"Tuesday","time":"12:00-13:30","mandatory":true,"duration":2}},"Course Quality":1.83,"Instructor Rating":2.06,"Course Difficulty":1.94,"Work Required":1.39,"Category":"Engineering"},{"title":"CIS\u00a05570  Programming for the Web","semester":"No semester info","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"This course will focus on web programming. The first half will focus on the basics of the internet and the Web, HTML and CSS, and basic and advanced Ruby. The second half will focus on Rails. Teams (of size 2-3) will build a web application in the second half of the semester as the class project. Through Rails, we'll ex;ore the \"culture\" of web programming such as agile methodology, testing, key aspects of software engineering, using web services and APIs, and deploying to the cloud.","assessment_method":"Weekly tests plus final exam","class_structure":{"Lab":{"day":"Tuesday","time":"14:00-15:30","mandatory":false,"duration":3},"Lecture":{"day":"Monday","time":"14:00-15:30","mandatory":true,"duration":2},"Recitation":{"day":"Tuesday","time":"14:00-15:30","mandatory":true,"duration":3}},"Course Quality":1.92,"Instructor Rating":1.57,"Course Difficulty":1.93,"Work Required":1.72,"Category":"Technical Electives"},{"title":"CIS\u00a05600  Interactive Computer Graphics","semester":"Fall","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"This course focuses on programming the essential mathematical and geometric concepts underlying modern computer graphics. Using 3D interactive implementations, it covers fundamental topics such as mesh data structures, transformation sequences, rendering algorithms, and curve interpolation for animation. Students are also introduced to two programming languages widely used in the computer graphics industry: C++ and GLSL. The curriculum is heavily project-based, and culminates in a group project focused on building an interactive first-person world exploration application using the various real-time interaction and rendering algorithms learned throughout the semester.","assessment_method":"Midterms, Weekly tests","class_structure":{"Lab":{"day":"Tuesday","time":"14:00-15:30","mandatory":true,"duration":2},"Recitation":{"day":"Friday","time":"08:00-09:30","mandatory":true,"duration":2},"Lecture":{"day":"Monday","time":"08:00-09:30","mandatory":false,"duration":1}},"Course Quality":1.7,"Instructor Rating":1.81,"Course Difficulty":1.82,"Work Required":1.69,"Category":"General Electives"},{"title":"CIS\u00a05640  Game Design and Development","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"The intent of the course is to provide students with a solid theoretical understanding of the core creative principles, concepts, and game play structures\/schemas underlying most game designs. The course also will examine game development from an engineering point of view, including: game play mechanics, game engine software and hardware architectures, user interfaces, design documents, playtesting and production methods. Basic understanding of 3D graphics and animation principles, prior exposure to scripting and programming languages such as Python, C and C++","assessment_method":"Weekly tests plus final exam, Project based","class_structure":{"Recitation":{"day":"Wednesday","time":"08:00-09:30","mandatory":false,"duration":1},"Lecture":{"day":"Tuesday","time":"16:00-17:30","mandatory":false,"duration":1},"Lab":{"day":"Wednesday","time":"14:00-15:30","mandatory":true,"duration":1}},"Course Quality":1.72,"Instructor Rating":1.59,"Course Difficulty":1.49,"Work Required":1.46,"Category":"Math and Natural Science"},{"title":"CIS\u00a05650  GPU Programming and Architecture","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"This course examines the architecture and capabilities of modern GPUs. The graphics processing unit (GPU) has grown in power over recent years, to the point where many computations can be performed faster on the GPU than on a traditional CPU. GPUs have also become programmable, allowing them to be used for a diverse set of applications far removed from traditional graphics settings. Topics covered include architectural aspects of modern GPUs, with a special focus on their streaming parallel nature, writing programs on the GPU using high level languages like Cg and BrookGPU, and using the GPU for graphics and general purpose applications in the area of geometry modeling, physical simulation, scientific computing and games. Students are expected to have a basic understanding of computer architecture and graphics, and should be proficient in OpenGL and C\/C++. This course is appropriate as an upper-level undergraduate CIS elective. CIS\u00a04600 or CIS\u00a05600, and familiarity with computer hardware\/systems. The hardware\/systems requirement may be met by CIS\u00a04710\/CIS\u00a05710; or CIT\u00a05930 and CIT\u00a05950; or CIS\u00a02400 (with CIS\u00a04710\/CIS\u00a05710 recommended); or equivalent coursework.","assessment_method":"Final exam, Weekly tests","class_structure":{"Lecture":{"day":"Tuesday","time":"08:00-09:30","mandatory":false,"duration":3}},"Course Quality":1.48,"Instructor Rating":1.8,"Course Difficulty":1.73,"Work Required":1.74,"Category":"Engineering"},{"title":"CIS\u00a05660  Procedural Computer Graphics","semester":"Fall or Spring","prerequisites":"Prerequisite: CIS\u00a04600 OR CIS\u00a05600","course_unit":"1 Course Unit","info":"Sprawling cities, dense vegetation, infinite worlds - procedural graphics empower technical artists to quickly create complex digital assets that would otherwise be unfeasible. This course is intended to introduce the mathematical and algorithmic foundations of procedural modeling and animation techniques, and to offer hands-on experience designing and implementing visual recipes in original graphics projects by applying these methods. Students should have a strong interest in both the creative and technical aspects of computer graphics, as well as a solid programming background.","assessment_method":"Weekly tests","class_structure":{"Lecture":{"day":"Friday","time":"12:00-13:30","mandatory":true,"duration":1},"Recitation":{"day":"Wednesday","time":"16:00-17:30","mandatory":true,"duration":1},"Lab":{"day":"Friday","time":"14:00-15:30","mandatory":true,"duration":1}},"Course Quality":1.66,"Instructor Rating":1.56,"Course Difficulty":1.84,"Work Required":1.92,"Category":"General Electives"},{"title":"CIS\u00a05670  Scientific Computing","semester":"Fall or Spring","prerequisites":"Prerequisite: MATH\u00a02400","course_unit":"1 Course Unit","info":"This course will focus on numerical algorithms and scientific computing techniques that are practical and efficient for a number of canonical science and engineering applications. Built on top of classical theories in multi-variable calculus and linear algebra (as a prerequisite), the lectures in this course will strongly focus on explaining numerical methods for applying these mathematical theories to practical engineering problems. Students will be expected to implement solutions and software tools using MATLAB\/C++, practice state-of-the-art parallel computing paradigms, and learn scientific visualization techniques using modern software packages. Prerequisites: MATH\u00a02400; knowledge of C++, Python or MATLAB","assessment_method":"Final exam","class_structure":{"Lab":{"day":"Wednesday","time":"16:00-17:30","mandatory":true,"duration":2},"Recitation":{"day":"Monday","time":"12:00-13:30","mandatory":false,"duration":2},"Lecture":{"day":"Tuesday","time":"10:00-11:30","mandatory":false,"duration":3}},"Course Quality":1.79,"Instructor Rating":1.7,"Course Difficulty":1.86,"Work Required":1.67,"Category":"Engineering"},{"title":"CIS\u00a05680  Game Design Practicum","semester":"Fall, Spring, and Summer Terms","prerequisites":"Prerequisite: (CIS\u00a04600 OR CIS\u00a04620 OR CIS\u00a05600 OR CIS\u00a05620)","course_unit":"1 Course Unit","info":"The objective of the game design practicum is to provide students with hands on experience designing and developing 3D games as well as Virtual Reality (VR) and Augmented Reality (AR) applications.  Working in teams of three, students will gain experience brainstorming original game concepts, writing formal design documents and developing a fully functional prototype of their game\/application. Technical features to be designed and implemented include novel game mechanics and\/or user interaction models, game physics, character animation, game AI (i.e. movement control, path planning, decision making, etc.), sound effects and background music, 2D graphical user interface (GUI) design and multiplayer networking capabilities. State-of-the-art game engine middleware such as the Unity3D and Unreal game engines will be used to expose student to commercial-grade software, production methodologies and art asset pipelines. As a result of their game development efforts, students will learn first-hand about the creative process, design documentation, object-oriented software design and engineering, project management (including effective team collaboration and communication techniques), design iteration through user feedback and play-testing, and most importantly, what makes a game or virtual reality experience interesting and fun to play.","assessment_method":"Final exam, Midterms, Weekly tests plus final exam","class_structure":{"Lab":{"day":"Friday","time":"16:00-17:30","mandatory":true,"duration":1},"Lecture":{"day":"Tuesday","time":"14:00-15:30","mandatory":false,"duration":2}},"Course Quality":1.81,"Instructor Rating":1.51,"Course Difficulty":1.6,"Work Required":1.58,"Category":"Engineering"},{"title":"CIS\u00a05800  Machine Perception","semester":"Fall","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"An introduction to the problems of computer vision and other forms of machine perception that can be solved using geometrical approaches rather than statistical methods. Emphasis will be placed on both analytical and computational techniques. This course is designed to provide students with an exposure to the fundamental mathematical and algorithmic techniques that are used to tackle challenging image based modeling problems. The subject matter of this course finds application in the fields of Computer Vision, Computer Graphics and Robotics. Some of the topics to be covered include: Projective Geometry, Camera Calibration, Image Formation, Projective, Affine and Euclidean Transformations, Computational Stereopsis, and the recovery of 3D structure from multiple 2D images. This course will also explore various approaches to object recognition that make use of geometric techniques, these would include alignment based methods and techniques that exploit geometric invariants. In the assignments for this course, students will be able to apply the techniques to actual computer vision problems. This course is appropriate as an upper-level undergraduate CIS elective. A solid grasp of the fundamentals of linear algebra. Some knowledge of programming in C and\/or Matlab","assessment_method":"Midterms, Project based, Weekly tests","class_structure":{"Lab":{"day":"Wednesday","time":"14:00-15:30","mandatory":false,"duration":3},"Lecture":{"day":"Friday","time":"16:00-17:30","mandatory":true,"duration":2}},"Course Quality":1.8,"Instructor Rating":1.75,"Course Difficulty":1.42,"Work Required":1.68,"Category":"Technical Electives"},{"title":"CIS\u00a05810  Computer Vision & Computational Photography","semester":"Not Offered Every Year","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"This is an introductory course to Computer Vision and Computational Photography. This course will explore three topics: 1) image morphing, 2) image matching and stitching, and 3) image recognition. This course is intended to provide a hands-on experience with interesting things to do on images\/videos. The world is becoming image-centric. Cameras are now found everywhere, in our cell phones, automobiles, even in medical surgery tools. Computer vision technology has led to latest innovations in areas such as Hollywood movie production, medical diagnosis, biometrics, and digital library. This course is suited for students from all Engineering backgrounds, who have the basic knowledge of linear algebra and programming, and a lot of imagination.","assessment_method":"Midterms, Final exam, Weekly tests plus final exam","class_structure":{"Recitation":{"day":"Monday","time":"16:00-17:30","mandatory":true,"duration":3}},"Course Quality":1.51,"Instructor Rating":1.86,"Course Difficulty":1.84,"Work Required":1.89,"Category":"Math and Natural Science"},{"title":"CIS\u00a05970  Master's Thesis Research","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1-2 Course Units","info":"For students working on an advanced research leading to the completion of a Master's thesis.","assessment_method":"Weekly tests plus final exam, Final exam, Midterms","class_structure":{"Recitation":{"day":"Tuesday","time":"14:00-15:30","mandatory":false,"duration":1},"Lab":{"day":"Friday","time":"08:00-09:30","mandatory":false,"duration":1}},"Course Quality":1.78,"Instructor Rating":1.62,"Course Difficulty":1.85,"Work Required":1.93,"Category":"Technical Electives"},{"title":"CIS\u00a05990  Independent Study for Masters Students","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1-4 Course Units","info":"For master's students studying a specific advanced subject area in computer and information science. Involves coursework and class presentations. A CIS\u00a05990 course unit will invariably include formally gradable work comparable to that in a CIS 500-level course. Students should discuss with the faculty supervisor the scope of the Independent Study, expectations, work involved, etc.","assessment_method":"Weekly tests, Weekly homework","class_structure":{"Recitation":{"day":"Tuesday","time":"14:00-15:30","mandatory":false,"duration":3},"Lab":{"day":"Thursday","time":"08:00-09:30","mandatory":false,"duration":1},"Lecture":{"day":"Tuesday","time":"10:00-11:30","mandatory":false,"duration":1}},"Course Quality":1.79,"Instructor Rating":1.91,"Course Difficulty":1.82,"Work Required":1.9,"Category":"Technical Electives"},{"title":"CIS\u00a06010  Advanced Topics in Computer Architecture","semester":"Fall or Spring","prerequisites":"Prerequisite: CIS\u00a05010 OR CIS 3710","course_unit":"1 Course Unit","info":"This course will focus on research topics in computer architecture, and include reading and presenting research papers and an optional project. The content will differ with each offering, covering topics such as multicore programmability, datacenter and warehouse-scale computing, security, energy-efficient architectures, etc.","assessment_method":"Weekly tests, Weekly homework","class_structure":{"Lab":{"day":"Friday","time":"10:00-11:30","mandatory":false,"duration":2},"Recitation":{"day":"Tuesday","time":"16:00-17:30","mandatory":true,"duration":2}},"Course Quality":1.73,"Instructor Rating":1.67,"Course Difficulty":1.84,"Work Required":1.72,"Category":"Technical Electives"},{"title":"CIS\u00a06100  Advanced Geometric Methods in Computer Science","semester":"Spring","prerequisites":"Prerequisite: CIS\u00a05010","course_unit":"1 Course Unit","info":"The purpose of this course is to present some of the advanced geometric methods used in geometric modeling, computer graphics, computer vision, etc. The topics may vary from year to year, and will be selected among the following subjects (nonexhaustive list): Introduction to projective geometry with applications to rational curves and surfaces, control points for rational curves, rectangular and triangular rational patches, drawing closed rational curves and surfaces; Differential geometry of curves (curvature, torsion, osculating planes, the Frenet frame, osculating circles, osculating spheres); Differential geometry of surfaces (first fundamental form, normal curvature, second fundamental form, geodesic curvature, Christoffel symbols, principal curvatures, Gaussian curvature, mean curvature, the Gauss map and its derivative dN, the Dupin indicatrix, the Theorema Egregium equations of Codazzi-Mainadi, Bonnet's theorem, lines of curvatures, geodesic torsion, asymptotic lines, geodesic lines, local Gauss-Bonnet theorem).","assessment_method":"Project based","class_structure":{"Lab":{"day":"Thursday","time":"10:00-11:30","mandatory":true,"duration":3},"Recitation":{"day":"Monday","time":"10:00-11:30","mandatory":true,"duration":2}},"Course Quality":1.74,"Instructor Rating":1.78,"Course Difficulty":1.71,"Work Required":1.96,"Category":"General Electives"},{"title":"CIS\u00a06200  Advanced Topics in Machine Learning","semester":"Spring","prerequisites":"Prerequisite: CIS\u00a05200","course_unit":"1 Course Unit","info":"This course covers a variety of advanced topics in machine learning, such as the following: statistical learning theory (statistical consistency properties of surrogate loss minimizing algorithms); approximate inference in probabilistic graphical models (variational inference methods and sampling-based inference methods); structured prediction (algorithms and theory for supervised learning problems involving complex\/structured labels); and online learning in complex\/structured domains. The precise topics covered may vary from year to year based on student interest and developments in the field.","assessment_method":"Weekly homework, Weekly tests plus final exam","class_structure":{"Recitation":{"day":"Friday","time":"08:00-09:30","mandatory":false,"duration":3},"Lecture":{"day":"Friday","time":"08:00-09:30","mandatory":false,"duration":3}},"Course Quality":1.93,"Instructor Rating":1.67,"Course Difficulty":1.5,"Work Required":1.87,"Category":"Math and Natural Science"},{"title":"CIS\u00a06250  Theory of Machine Learning","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"This course is an introduction to the theory of Machine Learning, a field which attempts to provide algorithmic, complexity-theoretic and statistical foundations to modern machine learning. The focus is on topics in machine learning theory for researchers and students in artificial intelligence, neural networks, theoretical computer science, and statistics.","assessment_method":"Weekly tests plus final exam, Project plus midterms","class_structure":{"Lecture":{"day":"Wednesday","time":"08:00-09:30","mandatory":true,"duration":3},"Recitation":{"day":"Tuesday","time":"08:00-09:30","mandatory":true,"duration":3}},"Course Quality":1.83,"Instructor Rating":1.48,"Course Difficulty":1.76,"Work Required":1.74,"Category":"General Electives"},{"title":"CIS\u00a06300  Advanced Topics in Natural Language Processing","semester":"Fall or Spring","prerequisites":"Prerequisite: CIS\u00a05300","course_unit":"1 Course Unit","info":"Different topics selected each offering; e.g., NL generation, question-answering, information extraction, machine translation, restricted grammar formalisms, computational lexical semantics, etc.","assessment_method":"Final exam, Project plus midterms","class_structure":{"Lab":{"day":"Friday","time":"08:00-09:30","mandatory":true,"duration":1}},"Course Quality":1.52,"Instructor Rating":1.72,"Course Difficulty":1.82,"Work Required":1.75,"Category":"Technical Electives"},{"title":"CIS\u00a06400  Advance Topics in Software Systems: Data Driven IoT\/Edge Computing","semester":"Spring","prerequisites":"Prerequisite: (CIS\u00a05450 OR CIS\u00a05190) AND (CIS\u00a05050 or CIS\u00a05410)","course_unit":"1 Course Unit","info":"This course is to explore selected topics in data driven IoT\/Edge Computing. We are currently witnessing a technological paradigm shift, in which the IoT systems are increasingly deployed in society. This course is to study emerging paradigms in IoT\/Edge Computing and to learn how to develop data driven applications that can harness the power of the IoT\/Edge computing. For application domains, the course will target connected medical devices, smart home for aging, and connected automotive systems. Topics to be covered include IoT\/Edge computing architectures, the Internet of medical things, connected vehicles, anomaly detection, mixed initiative systems, closed-loop systems, resource allocation, and security and privacy. The course will require a significant term project in connected health or connected automotive domains.","assessment_method":"Weekly homework, Project plus midterms, Project based","class_structure":{"Recitation":{"day":"Monday","time":"12:00-13:30","mandatory":true,"duration":3},"Lecture":{"day":"Monday","time":"16:00-17:30","mandatory":true,"duration":2},"Lab":{"day":"Monday","time":"16:00-17:30","mandatory":false,"duration":2}},"Course Quality":1.87,"Instructor Rating":1.81,"Course Difficulty":1.86,"Work Required":1.79,"Category":"General Electives"},{"title":"CIS\u00a06500  Advanced Topics in Databases","semester":"Spring","prerequisites":"Prerequisite: CIS\u00a05500","course_unit":"1 Course Unit","info":"Advanced topics in databases: distributed databases, integrity constraints, failure, concurrency control, relevant relational theory, semantics of data models, the interface between programming of languages and databases. Object-oriented databases. New topics are discussed each year.","assessment_method":"Weekly tests plus final exam, Midterms","class_structure":{"Lab":{"day":"Thursday","time":"12:00-13:30","mandatory":true,"duration":2},"Lecture":{"day":"Thursday","time":"16:00-17:30","mandatory":true,"duration":1},"Recitation":{"day":"Wednesday","time":"08:00-09:30","mandatory":true,"duration":3}},"Course Quality":1.77,"Instructor Rating":1.39,"Course Difficulty":1.77,"Work Required":1.96,"Category":"Technical Electives"},{"title":"CIS\u00a06600  Advanced Topics in Computer Graphics and Animation","semester":"Spring","prerequisites":"Prerequisite: CIS\u00a05600","course_unit":"1 Course Unit","info":"The goal of the course is to review state-of-the art research in the fields of computer graphics and animation as well as provide students with working knowledge of how to convert theory to practice by developing an associated graphics\/animation authoring tool. The course is comprised of primers, lectures, student presentations and the authoring tool group project. Each student will be responsible for presenting one primer and at least two SIGGRAPH papers to the class. Working in teams of two, students will design and develop an authoring tool that that facilitates the creation of a new type of user interaction, animation\/simulation capability or 3D graphics special effect. Research papers published in the SigGraph Conference proceedings will provide the basis for the features\/functionality\/special effects that can be selected for implementation in the authoring tool. Each group will analyze the need and user requirements for the tool they plan to develop, prepare a formal software design document, construct a project work plan, develop the authoring tool functionality and user interface, test the design and demonstratthe authoring of associated content. A plug-in to standard authoring tools such as Maya or Houdini must also be developed to enable importing of appropriate assets and\/or exporting of results.","assessment_method":"Project plus midterms","class_structure":{"Lab":{"day":"Friday","time":"14:00-15:30","mandatory":false,"duration":2},"Lecture":{"day":"Monday","time":"14:00-15:30","mandatory":false,"duration":1},"Recitation":{"day":"Tuesday","time":"08:00-09:30","mandatory":true,"duration":3}},"Course Quality":1.83,"Instructor Rating":1.6,"Course Difficulty":1.37,"Work Required":1.68,"Category":"Technical Electives"},{"title":"CIS\u00a06700  Advanced Topics in Programming Languages","semester":"Fall or Spring","prerequisites":"Prerequisite: CIS\u00a05000","course_unit":"1 Course Unit","info":"The details of this course change from year to year, but its purpose is to cover theoretical topics related to programming languages. Some central topics include: denotational vs operational semantics, domain theory and category theory, the lambda calculus, type theory (including recursive types, generics, type inference and modules), logics of programs and associated completeness and decidability problems, specification languages, and models of concurrency. The course requires a degree of mathematical sophistication.","assessment_method":"Final exam","class_structure":{"Recitation":{"day":"Tuesday","time":"12:00-13:30","mandatory":true,"duration":2}},"Course Quality":1.89,"Instructor Rating":1.8,"Course Difficulty":1.89,"Work Required":1.79,"Category":"Technical Electives"},{"title":"CIS\u00a06730  Computer-Aided Verification","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"This course introduces the theory and practice of formal methods for the design and analysis of concurrent and embedded systems. The emphasis is on the underlying logical and automata-theoretic concepts, the algorithmic solutions, and heuristics to cope with the high computational complexity. Topics: Models and semantics of reactive systems; Verification algorithms; Verification techniques. Topics may vary depending on instructor. Basic knowledge of algorithms, data structures, automata theory, propositional logic, operating systems, communication protocols, and hardware (CIS\u00a02620, CIS\u00a03800, or permission of the instructor).","assessment_method":"Weekly tests plus final exam","class_structure":{"Lab":{"day":"Thursday","time":"08:00-09:30","mandatory":true,"duration":1},"Recitation":{"day":"Tuesday","time":"14:00-15:30","mandatory":true,"duration":1},"Lecture":{"day":"Monday","time":"14:00-15:30","mandatory":true,"duration":2}},"Course Quality":1.86,"Instructor Rating":2.02,"Course Difficulty":1.89,"Work Required":1.65,"Category":"Math and Natural Science"},{"title":"CIS\u00a06770  Advanced Topics in Algorithms and Complexity","semester":"Fall","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"This course covers various aspects of discrete algorithms. Graph-theoretic algorithms in computational biology, and randomization and computation; literature in dynamic graph algorithms, approximation algorithms, and other areas according to student interests. Consent of the instructor.","assessment_method":"Weekly tests, Weekly homework, Weekly tests plus final exam","class_structure":{"Lab":{"day":"Thursday","time":"08:00-09:30","mandatory":false,"duration":3},"Lecture":{"day":"Thursday","time":"08:00-09:30","mandatory":false,"duration":2}},"Course Quality":1.77,"Instructor Rating":1.66,"Course Difficulty":1.84,"Work Required":1.92,"Category":"General Electives"},{"title":"CIS\u00a06800  Advanced Topics in Machine Perception","semester":"Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"Graduate seminar in advanced work on machine perception as it applies to robots as well as to the modeling of human perception. Topics vary with each offering. A previous course in machine perception or knowledge of image processing, experience with an operating system and language such as Unix and C, and aptitude for mathematics.","assessment_method":"Project plus midterms, Final exam","class_structure":{"Recitation":{"day":"Tuesday","time":"08:00-09:30","mandatory":true,"duration":1},"Lab":{"day":"Thursday","time":"14:00-15:30","mandatory":true,"duration":2}},"Course Quality":1.92,"Instructor Rating":1.74,"Course Difficulty":1.69,"Work Required":1.54,"Category":"Engineering"},{"title":"CIS\u00a06820  Friendly Logics","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"The use of logical formalisms in Computer Science is dominated by a fundamental conflict: expressiveness vs. algorithmic tractability. Database constraint logics, temporal logics and description logics are successful compromises in this conflict: (1) they are expressive enough for practical specifications in certain areas, and (2) there exist interesting algorithms for the automated use of these specifications. Interesting connections can be made between these logics because temporal and description logics are modal logics, which in turn can be seen, as can database constraint logics, as certain fragments of first-order logic. These connections might benefit research in databases, computer-aided verification and AI. Discussion includes other interesting connections, eg., with SLD-resolution, with constraint satisfaction problems, with finite model theory and with automata theory.","assessment_method":"Weekly tests, Weekly homework, Project plus midterms","class_structure":{"Lecture":{"day":"Tuesday","time":"14:00-15:30","mandatory":true,"duration":2},"Lab":{"day":"Tuesday","time":"14:00-15:30","mandatory":true,"duration":2}},"Course Quality":1.87,"Instructor Rating":1.75,"Course Difficulty":1.75,"Work Required":1.89,"Category":"Math and Natural Science"},{"title":"CIS\u00a07000  Special Topics","semester":"Not Offered Every Year","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"One time course offerings of special interest. Equivalent to a CIS 5XX level course.","assessment_method":"Project based, Project plus midterms","class_structure":{"Lecture":{"day":"Wednesday","time":"14:00-15:30","mandatory":true,"duration":2},"Lab":{"day":"Monday","time":"14:00-15:30","mandatory":false,"duration":3}},"Course Quality":1.77,"Instructor Rating":1.56,"Course Difficulty":1.92,"Work Required":1.67,"Category":"General Electives"},{"title":"CIS\u00a07980  Explaining Explanation","semester":"No semester info","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"In the social sciences we often use the word \"explanation\" as if (a) we know what we mean by it, and (b) we mean the same thing that other people do. In this course we will critically examine these assumptions and their consequences for scientific progress. In part 1 of the course we will examine how, in practice, researchers invoke at least three logically and conceptually distinct meanings of \"explanation:\" identification of causal mechanisms; ability to predict (account for variance in) some outcome; and ability to make subjective sense of something. In part 2 we will examine how and when these different meanings are invoked across a variety of domains, focusing on social science, history, business, and machine learning, and will explore how conflation of these distinct concepts may have created confusion about the goals of science and how we evaluate its progress. Finally , in part 3 we will discuss some related topics such as null hypothesis testing and the replication crisis. We will also discuss specific practices that could help researchers clarify exactly what they mean when they claim to have \"explained\" something, and how adoption of such practices may help social science be more useful and relevant to society.","assessment_method":"Weekly homework, Midterms, Weekly tests plus final exam","class_structure":{"Recitation":{"day":"Thursday","time":"10:00-11:30","mandatory":false,"duration":1}},"Course Quality":1.48,"Instructor Rating":1.69,"Course Difficulty":1.74,"Work Required":1.67,"Category":"Math and Natural Science"},{"title":"CIS\u00a08000  PhD Special Topics","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"One-time course offerings of special interest. Equivalent to CIS seminar course. Offerings to be determined.","assessment_method":"Midterms, Weekly tests plus final exam","class_structure":{"Lab":{"day":"Friday","time":"14:00-15:30","mandatory":false,"duration":3},"Lecture":{"day":"Monday","time":"16:00-17:30","mandatory":true,"duration":2},"Recitation":{"day":"Tuesday","time":"16:00-17:30","mandatory":false,"duration":3}},"Course Quality":1.93,"Instructor Rating":1.64,"Course Difficulty":1.83,"Work Required":1.79,"Category":"Technical Electives"},{"title":"CIS\u00a08100  Writing and Speaking with Style","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"This course is aimed at training CIS PhD students to excel in writing and presenting research results.","assessment_method":"Final exam","class_structure":{"Recitation":{"day":"Friday","time":"14:00-15:30","mandatory":false,"duration":2},"Lab":{"day":"Wednesday","time":"12:00-13:30","mandatory":false,"duration":1}},"Course Quality":1.78,"Instructor Rating":1.75,"Course Difficulty":1.83,"Work Required":1.41,"Category":"Math and Natural Science"},{"title":"CIS\u00a08950  Teaching Practicum","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1 Course Unit","info":"Enrollment for students participating in Teaching Practicum.","assessment_method":"Midterms, Project based, Final exam","class_structure":{"Lecture":{"day":"Monday","time":"16:00-17:30","mandatory":true,"duration":1},"Recitation":{"day":"Friday","time":"16:00-17:30","mandatory":false,"duration":2},"Lab":{"day":"Wednesday","time":"10:00-11:30","mandatory":true,"duration":1}},"Course Quality":1.67,"Instructor Rating":1.97,"Course Difficulty":1.7,"Work Required":1.81,"Category":"Technical Electives"},{"title":"CIS\u00a08990  Doctoral Independent Study","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1-4 Course Units","info":"For doctoral students studying a specific advanced subject area in computer and information science. The Independent Study may involve coursework, presentations, and formally gradable work comparable to that in a CIS\u00a05000 or 6000 level course. The Independent Study may also be used by doctoral students to explore research options with faculty, prior to determining a thesis topic. Students should discuss with the faculty supervisor the scope of the Independent Study, expectations, work involved, etc. The Independent Study should not be used for ongoing research towards a thesis, for which the CIS\u00a09990 designation should be used.","assessment_method":"Weekly tests plus final exam, Final exam","class_structure":{"Lab":{"day":"Friday","time":"12:00-13:30","mandatory":true,"duration":2},"Lecture":{"day":"Wednesday","time":"10:00-11:30","mandatory":true,"duration":3}},"Course Quality":1.83,"Instructor Rating":2.04,"Course Difficulty":1.75,"Work Required":1.4,"Category":"Math and Natural Science"},{"title":"CIS\u00a09950  Dissertation","semester":"No semester info","prerequisites":"No prerequisites listed","course_unit":"0 Course Units","info":"For Ph.D. candidates working exclusively on their dissertation research, having completed enrollment for a total of ten semesters (fall and spring). There is no credit or grade for CIS\u00a09950.","assessment_method":"Weekly tests, Weekly tests plus final exam, Project based","class_structure":{"Recitation":{"day":"Wednesday","time":"16:00-17:30","mandatory":true,"duration":1},"Lecture":{"day":"Friday","time":"10:00-11:30","mandatory":false,"duration":3}},"Course Quality":1.72,"Instructor Rating":1.77,"Course Difficulty":1.72,"Work Required":1.71,"Category":"General Electives"},{"title":"CIS\u00a09990  Thesis\/Dissertation Research","semester":"Fall or Spring","prerequisites":"No prerequisites listed","course_unit":"1-4 Course Units","info":"For students pursuing advanced research to fulfill PhD dissertation requirements.","assessment_method":"Final exam, Project based, Weekly tests","class_structure":{"Lab":{"day":"Monday","time":"10:00-11:30","mandatory":false,"duration":3},"Recitation":{"day":"Monday","time":"08:00-09:30","mandatory":false,"duration":1},"Lecture":{"day":"Wednesday","time":"08:00-09:30","mandatory":false,"duration":3}},"Course Quality":1.64,"Instructor Rating":1.82,"Course Difficulty":1.76,"Work Required":1.96,"Category":"General Electives"}]